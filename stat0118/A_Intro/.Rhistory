pivot_wider(names_from=year, values_from = value) %>%
kbl(caption="Life Expectancy, Population, and GDP per Capita for the US in 2002 and 2007", digits=0, format.args = list(big.mark = ",")) %>%
kable_classic()
library(scales)
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
mutate(gdpPercap = scales::dollar(gdpPercap))
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
mutate(gdpPercap = scales::dollar(gdpPercap)) %>%
pivot_longer(c(lifeExp, pop, gdpPercap), names_to = "Statistic", values_to="value")
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
mutate(gdpPercap = scales::dollar(gdpPercap))
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
mutate(gdpPercap = scales::dollar(gdpPercap)) %>%
pivot_longer(c(lifeExp, pop, gdpPercap), names_to = "Statistic", values_to="value")
library(kableExtra)
library(scales)
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
#mutate(gdpPercap = scales::dollar(gdpPercap)) %>%
pivot_longer(c(lifeExp, pop, gdpPercap), names_to = "Statistic", values_to="value") %>%
pivot_wider(names_from=year, values_from = value) %>%
kbl(caption="Life Expectancy, Population, and GDP per Capita for the US in 2002 and 2007", digits=0, format.args = list(big.mark = ",")) %>%
kable_classic()
library(kableExtra)
library(scales)
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
#mutate(gdpPercap = scales::dollar(gdpPercap)) %>%
pivot_longer(c(lifeExp, pop, gdpPercap), names_to = "Statistic", values_to="value") %>%
pivot_wider(names_from=year, values_from = value) %>%
kbl(caption="Life Expectancy, Population, and GDP per Capita for the US in 2002 and 2007", digits=0, format.args = list(big.mark = ",")) %>%
kable_classic()
?rows_update
library(kableExtra)
library(scales)
gapminder %>%
filter(year=="2007" | year == "2002") %>%
filter(country=="United States") %>%
select(lifeExp, pop, gdpPercap, year) %>%
#mutate(gdpPercap = scales::dollar(gdpPercap)) %>%
pivot_longer(c(lifeExp, pop, gdpPercap), names_to = "Statistic", values_to="value") %>%
pivot_wider(names_from=year, values_from = value) %>%
kbl(caption="Life Expectancy, Population, and GDP per Capita for the US in 2002 and 2007", digits=0, format.args = list(big.mark = ",")) %>%
kable_classic()
ggplot(usa_states, aes(long, lat)) +
geom_polygon(aes(group=group), fill ="#75816b", color ="#292c26") +
coord_quickmap() +
theme_light()
#LOAD PACKAGES
library(tidyverse)
library(maps)
#LOAD DATA
world_map <- map_data("world")
#World Map
ggplot(world_map, aes(long, lat, group=group)) +
geom_polygon() +
coord_quickmap()
#Subset to get Italy
italy <- map_data("world", region ="Italy")
#Subset to get USA
usa <- map_data("world", region ="USA")
# ASPECT RATIO NOT MAINTAINED
ggplot(italy, aes(long, lat)) +
geom_polygon(aes(group=group)) +
theme_light() +
ggtitle("Italy - Aspect Ratio Not Maintained (not good)")
# ASPECT RATIO MAINTAINED
ggplot(italy, aes(long, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()  +
theme_light() +
ggtitle("Italy - Aspect Ratio Maintained (better)")
#Load Data from maps
usa_states <- map_data("state")
#Plot of USA with state borders
ggplot(usa_states, aes(long, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()
ggplot(usa_states, aes(long, lat)) +
geom_polygon(aes(group=group), fill ="#75816b", color ="#292c26") +
coord_quickmap() +
theme_light()
nc %>%
ggplot() +
geom_sf(col="black", fill="darkgrey") +
theme_light() +
ggtitle("North Carolina Counties")
nc %>%
ggplot() +
geom_sf( aes(fill = BIR74), col ="black") +
theme_light()+
ggtitle("North Carolina, Birth Rates in 1974")
#LOAD PACKAGES
library(tidyverse)
library(maps)
#LOAD DATA
world_map <- map_data("world")
#World Map
ggplot(world_map, aes(long, lat, group=group)) +
geom_polygon() +
coord_quickmap()
#Subset to get Italy
italy <- map_data("world", region ="Italy")
#Subset to get USA
usa <- map_data("world", region ="USA")
# ASPECT RATIO NOT MAINTAINED
ggplot(italy, aes(long, lat)) +
geom_polygon(aes(group=group)) +
theme_light() +
ggtitle("Italy - Aspect Ratio Not Maintained (not good)")
# ASPECT RATIO MAINTAINED
ggplot(italy, aes(long, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()  +
theme_light() +
ggtitle("Italy - Aspect Ratio Maintained (better)")
#Load Data from maps
usa_states <- map_data("state")
#Plot of USA with state borders
ggplot(usa_states, aes(long, lat)) +
geom_polygon(aes(group=group)) +
coord_quickmap()
ggplot(usa_states, aes(long, lat)) +
geom_polygon(aes(group=group), fill ="#75816b", color ="#292c26") +
coord_quickmap() +
theme_light()
#LOAD PACKAGES
#install.packages("sf") - note some students are getting a pop-up when they install the sf package for the first time. Select the "no" option when it pops up in your console.
library(sf)
#some students are needing into install the rgeos package seperately as well
#library(rgeos)
demo(nc, ask = FALSE, echo = FALSE)
nc %>%
ggplot() +
geom_sf()
nc %>%
ggplot() +
geom_sf(col="black", fill="darkgrey") +
theme_light() +
ggtitle("North Carolina Counties")
nc %>%
ggplot() +
geom_sf( aes(fill = BIR74), col ="black") +
theme_light()+
ggtitle("North Carolina, Birth Rates in 1974")
library(RColorBrewer)
nc %>%
ggplot() +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = brewer.pal(8,"Spectral") ) + #customize colors
theme_light()
library(RColorBrewer)
nc %>%
ggplot() +
geom_sf(aes(fill = BIR74)) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = brewer.pal(8,"Spectral") ) + #customize colors
theme_light()
nc %>%
ggplot() +
geom_sf(aes(fill = BIR74)) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = brewer.pal(11,"Spectral")[5:11] ) + #customize colors
theme_light()
nc %>%
ggplot() +
geom_sf(aes(fill = BIR74)) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = c("yellow","orange","red"))
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = brewer.pal(8, "Spectral") ) +  #customize colors
theme_light() +
geom_sf_text(data = nc[nc$BIR74 >15000,], aes(label = NAME), fontface="bold")
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_gradientn(colors = brewer.pal(8, "Spectral") ) +  #customize colors
theme_light() +
geom_sf_text(data = nc[nc$BIR74 >15000,], aes(label = NAME), fontface="bold")
us_states %>% ggplot() +
geom_sf() +
theme_light() + geom_point(data=airports, aes(x=lon, y=lat), pch=19, size=0.1) +
coord_sf(xlim = c(-130, -65),ylim = c(20,50))
#LOAD PACKAGES
library(tidyverse)
library(sf) #this is a package needed so R can work with sf objects
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("us_states")
us_states %>%
ggplot() +
geom_sf() +
theme_light()
library(nycflights13)
data(airports)
us_states %>% ggplot() +
geom_sf() +
theme_light() + geom_point(data=airports, aes(x=lon, y=lat), pch=19, size=0.1) +
coord_sf(xlim = c(-130, -65),ylim = c(20,50))
airports_count <- airports %>%
inner_join(dest_count, by=c("faa"="dest"))
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.175, lat=44.010, popup="Warner Hall")
#LOAD PACKAGES
library(tidyverse)
library(sf) #this is a package needed so R can work with sf objects
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("us_states")
us_states %>%
ggplot() +
geom_sf() +
theme_light()
library(nycflights13)
data(airports)
us_states %>% ggplot() +
geom_sf() +
theme_light() + geom_point(data=airports, aes(x=lon, y=lat), pch=19, size=0.1) +
coord_sf(xlim = c(-130, -65),ylim = c(20,50))
data(flights)
dest_count <- flights %>%
group_by(dest) %>%
summarize(count=n())
airports_count <- airports %>%
inner_join(dest_count, by=c("faa"="dest"))
us_states %>%
ggplot() +
geom_sf() +
theme_light() +
geom_point(data=airports_count, aes(x=lon, y=lat, size=count)) +
scale_size(range = c(0.2,5), breaks=c(0,1,10,100,1000,10000,100000))+
coord_sf(xlim = c(-130, -65),ylim = c(20,50))
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-73.175, lat=44.010, popup="Warner Hall")
leaflet(data=airports_count) %>%
addTiles() %>% # Add default OpenStreetMap map tiles
addMarkers(lng=~lon, lat=~lat, popup=~faa)
leaflet() %>%
addTiles() %>%
# Add default OpenStreetMap map tiles
addMarkers(lng=-73.175, lat=44.010, popup="Warner Hall")
library(leaflet)
library(leaflet)
remove.packages("leaflet")
install.packages("leaflet")
library(leaflet)
install.packages("quarto")
library(quarto)
#LOAD PACKAGES
library(tidyverse)
library(scales)
#LOAD DATA
housingdata <- read.csv("https://raw.githubusercontent.com/abhiram-ds/housing_price_adv_regression/main/train.csv")
housingdata %>%
select(GrLivArea, SalePrice) %>%
cor()
cor(housingdata$GrLivArea, housingdata$SalePrice)
#| warning: FALSE
#LOAD PACKAGES
library(tidyverse)
library(scales)
#LOAD DATA
housingdata <- read.csv("https://raw.githubusercontent.com/abhiram-ds/housing_price_adv_regression/main/train.csv")
#lm(dependent_variable ~ independent_variable, data = dataset)
lm(SalePrice ~ GrLivArea, data=housingdata)
#lm(dependent_variable ~ independent_variable, data = dataset)
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
summary()
#lm(dependent_variable ~ independent_variable, data = dataset)
lm(SalePrice ~ GrLivArea, data=housingdata)
#OR
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
summary()
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
tidy()
library(broom)
library(kableExtra)
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
tidy()
library(broom)
library(kableExtra)
#prettier
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
tidy() %>%
kbl() %>%
kable_styling()
library(broom)
library(kableExtra)
#prettier
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
tidy() %>%
kbl() %>%
kable_styling()
library(broom)
library(kableExtra)
#prettier
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
tidy() %>%
kbl() %>%
kable_styling()
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
autoplot(fit, which=1)
newdata <- data.frame(GrLivArea = c(2000))
predict(fit, newdata)
#lm(dependent_variable ~ independent_variable, data = dataset)
fit <- lm(SalePrice ~ GrLivArea, data=housingdata)
fit
#OR
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
summary()
#lm(dependent_variable ~ independent_variable, data = dataset)
lm(SalePrice ~ GrLivArea, data=housingdata)
#OR
lm(SalePrice ~ GrLivArea, data=housingdata) %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
str_detect("Look at this cool dataset from my data science class", "data")
str_detect("Look at this cool dataset from my data science class", "pineapple")
courses <- read_csv("Fall23courses.csv")
View(courses)
courses %>%
filter(str_detect(location, "WNS"))
notFriday <- courses %>%
filter(!str_detect(meet, "Friday"))
immigrationclasses <- courses %>%
filter(str_detect(description, regex("immigration", ignore_case=TRUE)))
immigrationclasses <- courses %>%
filter(str_detect(description, regex("immigration", ignore_case=TRUE)))
immigrationclasses <- courses %>%
filter(str_detect(description, regex("immigration", ignore_case=TRUE)))
immigrationclasses
?str_extract
str_extract("Welcome to data science, look at this cool data", "data")
str_extract_all("Welcome to data science, look at this cool data", "data")
str_remove("Welcome to data science, look at this cool data", "data")
str_remove_all("Welcome to data science, look at this cool data", "data")
courses %>%
mutate(CW = str_extract(distros, "CW")) %>%
mutate(distros = str_remove("CW"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
courses <- read_csv("Fall23courses.csv")
str_detect("Welcome to data science, look at this cool data", "data")
str_detect("Welcome to data science, look at this cool data", "pineapple")
courses %>%
filter(str_detect(location, "WNS"))
notFriday <- courses %>%
filter(!str_detect(meet, "Friday"))
immigrationclasses <- courses %>%
filter(str_detect(description, regex("immigration", ignore_case=TRUE)))
immigrationclasses
str_extract("Welcome to data science, look at this cool data", "data")
str_extract_all("Welcome to data science, look at this cool data", "data")
str_remove("Welcome to data science, look at this cool data", "data")
str_remove_all("Welcome to data science, look at this cool data", "data")
courses %>%
mutate(CW = str_extract(distros, "CW")) %>%
mutate(distros = str_remove("CW"))
courses %>%
mutate(CW = str_extract(distros, "CW")) %>%
mutate(distros = str_remove("CW"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
courses <- read_csv("Fall23courses.csv")
str_detect("Welcome to data science, look at this cool data", "data")
str_detect("Welcome to data science, look at this cool data", "pineapple")
courses %>%
filter(str_detect(location, "WNS"))
notFriday <- courses %>%
filter(!str_detect(meet, "Friday"))
immigrationclasses <- courses %>%
filter(str_detect(description, regex("immigration", ignore_case=TRUE)))
immigrationclasses
str_extract("Welcome to data science, look at this cool data", "data")
str_extract_all("Welcome to data science, look at this cool data", "data")
str_remove("Welcome to data science, look at this cool data", "data")
str_remove_all("Welcome to data science, look at this cool data", "data")
courses
courses %>%
mutate(CW = str_extract(distros, "CW"))
courses %>%
mutate(CW = str_extract(distros, "CW")) %>%
mutate(distros = str_remove("CW"))
courses %>%
mutate(CW = str_extract(distros, "CW")) %>%
mutate(distros = str_remove(distros, "CW"))
str_sub("Welcome to data science, look at this cool data", start=12, end=23) #inclusive bounds
MathClasses <- courses %>%
filter(department == "Mathematics") %>%
mutate(level=str_sub(courseNum, start=6, end=6))
Math2Classes <- MathClasses %>%
filter(level== "2")
str_count("Welcome to data science, look at this cool data", "data")
courses <- courses %>%
mutate(dayCount = str_count(meet, "day"))
#what's the maximum number of days a week a class meets?
max(courses$dayCount)
#what's the mean number of days?
mean(courses$dayCount)
courses %>%
ggplot() +
geom_bar(aes(x=dayCount), fill="blue") +
xlab("Number of Days Class Meets") +
ylab("Number of Classes") +
labs(title="How many Days a Week do Classes at Middlebury Meet?")+
theme_classic()
#make_date
power <- read.csv("power.csv")
power <- power %>%
mutate(Date = mdy_hm(Date))
#make_datetime
power <- read.csv("power.csv")
#make_date
power <- read.csv("power.csv")
power <- power %>%
mutate(Date = mdy_hm(Date))
#make_datetime
#make_date
power <- read.csv("power.csv")
power <- power %>%
mutate(Date = mdy_hm(Date))
power %>%
ggplot(aes(x=Data, y=power_kW)) %>%
geom_line()
power %>%
ggplot(aes(x=Data, y=power_kW)) +
geom_line()
power %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
#make_date
power <- read.csv("power.csv")
power %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
# need to put it in standardized date format first
power <- power %>%
mutate(Date = mdy_hm(Date))
power %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
#pick out year, month, date so we can filter and sort
power <- power %>%
mutate(Month = month(Date))
#pick out year, month, date so we can filter and sort
power <- power %>%
mutate(Year = year(Date)) %>%
mutate(Month = month(Date)) %>%
mutate(Day = day(Date))
View(power)
power %>%
filter(Month == "5")
power %>%
filter(Month == "5") %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
power %>%
filter(Month == "5") %>%
filter(Day == "1")
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
power %>%
filter(Month == "5") %>%
filter(Day == "1") %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
power %>%
filter(Month == "5") %>%
filter(Day == "4") %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
power %>%
filter(Month == "5") %>%
filter(Day == "31") %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
power %>%
filter(Month == "6") %>%
filter(Day == "1") %>%
ggplot(aes(x=Date, y=power_kW)) +
geom_line()
#LOAD DATA
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
portal_rodent <- portal_rodent %>%
mutate(datetime = make_datetime(year, month, day))
