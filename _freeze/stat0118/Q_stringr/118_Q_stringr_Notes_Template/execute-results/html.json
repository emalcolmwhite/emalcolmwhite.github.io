{
  "hash": "87e348d115007ec7285cca69ad349991",
  "result": {
    "markdown": "---\ntitle: \"STAT 118: Notes Q\"\nsubtitle: |\n  | Working with text with `stringr`\n  | ![](https://stringr.tidyverse.org/logo.png){width=10%}\nformat:\n  html:\n    toc: true\n    code-overflow: wrap\n---\n\n\n\n\n\n![artwork by @allisonhorst](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/6bbcc35c-1863-49df-8204-d981303d8cd3_rw_1200.png?h=96d11e5bed7cfe2474d27a99980d0881){width=50%}\n\n\n\n# A few basics\n\n**What is a string?**\n\n- datatype we use to represent text\n- use \" \" \n\n**Examples of strings:**\n\n- \n\n** NOT a string:**\n\n- \n\n# Using `stringr`\n\n[`stringr`](https://stringr.tidyverse.org/) is a package containing a bunch of functions that help us work with strings. We'll discuss how to detect, remove, extract, and count words/characters/phrases from a string. We'll also talk about how to slice a string to get only the parts (aka the substrings) of it that you want.\n  \n[**`stringr` cheat sheet**](https://evoldyn.gitlab.io/evomics-2018/ref-sheets/R_strings.pdf)\n\n`stringr` is contained within the `tidyverse` package. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n**I'm registering for classes this Spring and am trying to decide what to take.**\nLet's look at the course catalog!\n\nRead in the courses data.\n\n::: {.cell}\n\n```{.r .cell-code}\ncourses <- read_csv(\"Fall23courses.csv\")\n```\n:::\n\n    \n## `str_detect` \n\n![artwork by @allisonhorst](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/813129dc-25e9-4ea3-9d03-262401faefba_rw_1200.png?h=e33a9402181e738d792b78e04cf4a6bc)\n  \n**inputs**: - string\n            - pattern\n            \n**output**: - TRUE/FALSE\n\nlittle example:\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\nI only want to take classes in Warner! \n\n::: {.cell}\n\n:::\n\n  \n  \nSuppose I don't want any classes on Friday. Let's use `str_detect` to find our options.\n\n\n::: {.cell}\n\n:::\n\n\n\nPerhaps I'm interested in immigration.  \n  \nThe `regex` function is used to write regular expressions in R. Regular expressions are helpful if you want to search for a pattern rather than a specific word or phrase.  \n\nFor now, we will only use regex to ignore capitalization.\n\nIf you're interested in using regular expressions at some point, this [regex cheat sheet](https://cheatography.com/davechild/cheat-sheets/regular-expressions/) will be super helpful.\n\n\n::: {.cell}\n\n:::\n\n  \n## `str_extract` and `str_remove`\n  \n**str_extract inputs**: - string\n                        - pattern\n**str_extract output**: - the extracted pattern, if it appears in the the string\n\n**str_remove inputs**:  - string\n                        - pattern\n                        \n**str_extract output**:  - the string without the pattern, if it appears in the string\n\nlittle example:\n\n::: {.cell}\n\n:::\n\n  \n  \n  \nCW is part of the distribution requirement column. I want CW to be its own column.  \n\n\n::: {.cell}\n\n:::\n\n  \n  \n  \n## `str_sub`\n  \n  \n**str_sub inputs**: - string   \n                    - starting character \n                    - ending character\n                    \n**str_sub output**: - string with only the characters between the start and the end   \n  \nlittle example:\n\n::: {.cell}\n\n:::\n\n  \n:::notes-tip\nBounds are inclusive!\n:::\n\nMaybe I only want 200 level math classes.  \n\n- First we filter for just math classes. \n- Then we can create a new column called `level` that contains only the sixth character from the `courses` column.  \n\nWe call this a **substring**, hence the function `str_sub`.  \n\n\n\n::: {.cell}\n\n:::\n\n  \n  \n## `str_count`\n  \n**str_count inputs**: - string  \n                      - pattern\n**str_count output**: - a count of the number of times the pattern appears in the string\n  \nlittle example:\n\n::: {.cell}\n\n:::\n\n \nMaybe I only want my classes to meet twice a week.\n\n::: {.cell}\n\n:::\n\n\nLet's visualize this data.\n\n::: {.cell}\n\n:::\n\n\n# Another useful function `str_squish`\n\n`str_squish` is used to remove leading, trailing, and repeated interior whitespaces from strings\n\n![artwork by @allisonhorst](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/0e4df3af-8bca-4f5e-9945-a3859d56c534_rw_1200.png?h=cbb57087ad1e3e69fdb572d10f26f8e2)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}