{
  "hash": "7925de68e87423528bd1e5e32885a2fe",
  "result": {
    "markdown": "---\ntitle: 'Cleaning and tidying data using `janitor`'\nauthor: 'Emily Malcolm-White'\nformat:\n  html: \n    toc: TRUE\n    code-overflow: wrap\n    embed-resources: true\n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n    code-annotations: hover\nexecute: \n  message: FALSE\n  warning: FALSE\n---\n\n\n\\n\n\n> Data scientists, according to interviews and expert estimates, spend from 50 percent to 80 percent of their time mired in this more mundane labor of collecting and preparing unruly digital data, before it can be explored for useful nuggets. \\n - “For Big-Data Scientists, ‘Janitor Work’ Is Key Hurdle to Insight” (New York Times, 2014)\n\n`janitor` helps clean data quickly and consistently.\n\n![](https://sfirke.github.io/janitor/reference/figures/logo_small.png){width=20%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Packages\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(janitor)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\nHere is some messy data to start: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster_raw <- read_excel(\"data/raw_roster.xlsx\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-71dec24fcfe04c737730\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-71dec24fcfe04c737730\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\"],[\"First Name\",\"Jason\",\"Jason\",\"Alicia\",\"Ada\",\"Desus\",\"Chien-Shiung\",\"Chien-Shiung\",null,\"James\",\"Hedy\",\"Carlos\",\"Young\",\"Micheal\"],[\"Last Name\",\"Bourne\",\"Bourne\",\"Keys\",\"Lovelace\",\"Nice\",\"Wu\",\"Wu\",null,\"Joyce\",\"Lamarr\",\"Boozer\",\"Boozer\",\"Larsen\"],[\"Employee Status\",\"Teacher\",\"Teacher\",\"Teacher\",\"Teacher\",\"Administration\",\"Teacher\",\"Teacher\",null,\"Teacher\",\"Teacher\",\"Coach\",\"Coach\",\"Teacher\"],[\"Subject\",\"PE\",\"Drafting\",\"Music\",null,\"Dean\",\"Physics\",\"Chemistry\",null,\"English\",\"Science\",\"Basketball\",null,\"English\"],[\"Hire Date\",\"39690\",\"43479\",\"37118\",\"38572\",\"42791\",\"11037\",\"11037\",null,\"36423\",\"27919\",\"42221\",\"34700\",\"40071\"],[\"% Allocated\",\"0.75\",\"0.25\",\"1\",\"1\",\"1\",\"0.5\",\"0.5\",null,\"0.5\",\"0.5\",null,null,\"0.8\"],[\"Full time?\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",\"Yes\",null,\"No\",\"No\",\"No\",\"No\",\"No\"],[\"do not edit! ---&gt;\",null,null,null,null,null,null,null,null,null,null,null,null,null],[\"Certification\",\"Physical ed\",\"Physical ed\",\"Instr. music\",\"PENDING\",\"PENDING\",\"Science 6-12\",\"Science 6-12\",null,null,\"PENDING\",\"Physical ed\",null,\"Vocal music\"],[\"Certification\",\"Theater\",\"Theater\",\"Vocal music\",\"Computers\",null,\"Physics\",\"Physics\",null,\"English 6-12\",null,null,\"Political sci.\",\"English\"],[\"Active?\",\"YES\",\"YES\",\"YES\",\"YES\",\"YES\",\"YES\",\"YES\",null,\"YES\",\"YES\",\"YES\",\"YES\",\"YES\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Data most recently refreshed on:<\\/th>\\n      <th>...2<\\/th>\\n      <th>...3<\\/th>\\n      <th>Dec-27 2020<\\/th>\\n      <th>...5<\\/th>\\n      <th>...6<\\/th>\\n      <th>...7<\\/th>\\n      <th>...8<\\/th>\\n      <th>...9<\\/th>\\n      <th>...10<\\/th>\\n      <th>...11<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"searching\":false,\"lengthChange\":false,\"buttons\":[\"copy\",\"csv\",\"excel\"],\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Data most recently refreshed on:\",\"targets\":1},{\"name\":\"...2\",\"targets\":2},{\"name\":\"...3\",\"targets\":3},{\"name\":\"Dec-27 2020\",\"targets\":4},{\"name\":\"...5\",\"targets\":5},{\"name\":\"...6\",\"targets\":6},{\"name\":\"...7\",\"targets\":7},{\"name\":\"...8\",\"targets\":8},{\"name\":\"...9\",\"targets\":9},{\"name\":\"...10\",\"targets\":10},{\"name\":\"...11\",\"targets\":11}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n# Column Names\n\n`row_to_names(row_number = 1)`\n\n- Uses the first row of the table as the column names\n\n`clean_names()`\n\n- Converts all column names to snake_case\n- Removes special characters and extra spaces\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster <- roster_raw %>%\n  row_to_names(row_number = 1) %>%  \n  clean_names()\n```\n:::\n\n\n:::{.callout-tip}\n# A note about reproducibility\n\nWhile you can edit a file in Excel *before* importing it into RStudio, it’s important to consider whether you’ll need to repeat this analysis in the future.\n\nIf you’re only uploading the file once, making a few edits in Excel may be fine.\n\nHowever, if you’re working with recurring reports—such as monthly data updates—it’s worth investing the effort upfront to automate the cleaning in R. This way, you can simply upload each new file without needing to manually clean it every time.\n\n:::\n\n# Remove any weird columns you don't need or want\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster <- roster %>% \n  select(-do_not_edit)\n```\n:::\n\n\n\n# Remove empty rows or columns with remove_empty()\n\nExcel files often include blank rows or columns that sneak into your dataset. Cleaning them helps avoid weird bugs. This doesn't happen so often with .csv files. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster <- roster %>% \n  remove_empty(\"rows\") %>% \n  remove_empty(\"cols\")\n```\n:::\n\n\n# Missing data NA\n\n\n::: {.cell}\n\n:::\n\n\n\n**Be explicit about your choices with NAs**\nDon’t just drop them silently—use `drop_na()` or `replace_na()`. If you choose to drop missing rows, you need to explain why.\n\n#  Identify duplicate rows with `get_dupes()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster %>% \n  get_dupes()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 11\n# ℹ 11 variables: first_name <chr>, last_name <chr>, employee_status <chr>,\n#   subject <chr>, hire_date <chr>, percent_allocated <chr>, full_time <chr>,\n#   certification <chr>, certification_2 <chr>, active <chr>, dupe_count <int>\n```\n:::\n:::\n\n\n\n:::{.callout-note}\n\n| Function     | Purpose                                | Output                                          |\n|--------------|----------------------------------------|-------------------------------------------------|\n| `get_dupes()`| Find and display duplicated rows       | Only the duplicated rows (plus a `dupe_count`)  |\n| `distinct()` | Remove duplicates (keep unique rows only) | A cleaned dataset with no duplicates         |\n\n:::\n\nIn this case, it looks appropriate to drop all the duplicated rows (since the student_id is being repeated)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster <- roster %>% \n  distinct()\n```\n:::\n\n\n\n# `tably`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroster %>%\n  tabyl(subject) %>% \n  adorn_totals(\"row\") %>%  \n  adorn_percentages(\"col\") %>%  \n  adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    subject   n percent valid_percent\n Basketball 0.1    8.3%         10.0%\n  Chemistry 0.1    8.3%         10.0%\n       Dean 0.1    8.3%         10.0%\n   Drafting 0.1    8.3%         10.0%\n    English 0.2   16.7%         20.0%\n      Music 0.1    8.3%         10.0%\n         PE 0.1    8.3%         10.0%\n    Physics 0.1    8.3%         10.0%\n    Science 0.1    8.3%         10.0%\n       <NA> 0.2   16.7%             -\n      Total 1.0  100.0%        100.0%\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#roster %>%\n#  filter(hire_date > as.Date(\"1950-01-01\")) %>%\n#  tabyl(employee_status, full_time)\n```\n:::\n\n\n:::{.callout-note}\n**Clean first → Analyze second**\n:::\n\n",
    "supporting": [
      "118_janitor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<script src=\"../../site_libs/jszip-1.13.6/jszip.min.js\"></script>\n<link href=\"../../site_libs/dt-ext-buttons-1.13.6/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-ext-buttons-1.13.6/js/dataTables.buttons.min.js\"></script>\n<script src=\"../../site_libs/dt-ext-buttons-1.13.6/js/buttons.html5.min.js\"></script>\n<script src=\"../../site_libs/dt-ext-buttons-1.13.6/js/buttons.colVis.min.js\"></script>\n<script src=\"../../site_libs/dt-ext-buttons-1.13.6/js/buttons.print.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}