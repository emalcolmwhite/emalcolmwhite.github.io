{
  "hash": "562c295c0fd6cc50e93dcaf408dd35cd",
  "result": {
    "markdown": "---\ntitle: 'working with text with `stringr`'\nsubtitle: |\n  | ![](https://stringr.tidyverse.org/logo.png){width=10%}\nauthor: 'Violet Ross'\ninstitute: 'Middlebury College'\nformat:\n  html: \n    toc: TRUE\n    code-overflow: wrap\n    embed-resources: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n#LOAD PACKAGES \nlibrary(tidyverse)\nlibrary(stringr)\n```\n:::\n\n\n## A few basics\n\n**What is a string?**\n  \nA string is a data type used to represent text. In R, we indicate that something is a string by referring to it with quotes.\n\nExamples of strings:\n\n- \n- \n- \n\nNOT a string:\n\n- \n\n**What is ** `stringr` **?**\n  \nstringr is a package containing a bunch of functions that help us work with strings.\n  \n[**stringr cheat sheet**](https://evoldyn.gitlab.io/evomics-2018/ref-sheets/R_strings.pdf)\n\n# Using `stringr`\n\n**I'm registering for classes for this Fall and am trying to decide which courses to take.**\n  \nLet's look at the course catalog!\n\nRead in the courses data.\n\n\n::: {.cell}\n\n:::\n\n\n## `str_detect` \n  \n**inputs**: \n  \n-  a string (or a column of strings) to search *from*  \n-  a string to search *for*  \n  \n**output**: boolean value (TRUE or FALSE)  \n\nlittle example:\n\n::: {.cell}\n\n:::\n\n\nI only want to take classes in Warner! Let's filter for rows where we **detect** the word \"Warner\" in the `location` column.\n\n::: {.cell}\n\n:::\n\n  \n  \n  \nSuppose I don't want any classes on Friday. Let's use `str_detect` to find our options.\n\n::: {.cell}\n\n:::\n\n\n\nPerhaps I'm interested in artificial intelligence. \nWe can use `str_detect` to find course descriptions that mention artificial intelligence.  \n  \nThe `regex` function is used to write regular expressions in R. Regular expressions are helpful if you want to search for a pattern rather than a specific word or phrase.  \nFor now, we will only use regex to ignore capitalization. \nIf you're interested in using regular expressions at some point, this [regex cheat sheet](https://cheatography.com/davechild/cheat-sheets/regular-expressions/) will be super helpful.\n\n\n::: {.cell}\n\n:::\n\n  \n  \n  \n## `str_extract` and `str_remove`\n  \n  \n**str_extract inputs**: \n  \n-  a string (or a column of strings) to extract *from*  \n-  a string to extract  \n  \n**str_extract output**: the string you wanted to extract OR nothing  \n\n**str_remove inputs**: \n  \n-  a string (or a column of strings) to remove stuff *from*  \n-  a string to remove  \n  \n**str_remove output**: the first input string with the second input removed  \n\nlittle example:\n\n::: {.cell}\n\n:::\n\n  \n  \n  \nCW is part of the distribution requirement column. I want CW to be its own column.  \nFirst we can create a new column called `isCW` by **extracting** instances of \"CW\" from the `distros` column in each row.  \nThen we can **remove** all instances of \"CW\" from the `distros` column.\n\n::: {.cell}\n\n:::\n\n  \n  \n  \n## `str_sub`\n  \n  \n**str_sub inputs**:\n  \n-  a string (or a column of strings) take substrings of  \n-  where the substring should start\n-  where the substring should end\n  \n**str_sub output**: the substring    \n  \nlittle example:\n\n::: {.cell}\n\n:::\n\n  \n\nMaybe I only want 200 level math and stats classes.  \nFirst we filter for just math/stats classes. \nThen we can create a new column called `level` that contains only the sixth character from the `courses` column.  \n\n\nWe can then filter our `level` column for specific course levels.\n\n::: {.cell}\n\n:::\n\n  \n  \n  \n## `str_count`\n  \n  \nlittle example:\n\n::: {.cell}\n\n:::\n\n \n  \n**str_count inputs**: \n  \n-  a string (or a column of strings) to count *from*  \n-  a string you want to count the number of instances of  \n  \n**str_count output**: the number of times the second string occurs in your first string\n\n\nMaybe I only want my classes to meet twice a week. Let's **count** how many times \"day\" appears in the `meet` column and put this value in a new column called `dayCount`. `dayCount` represents how many days a week a class meets.\n\n::: {.cell}\n\n:::\n\n\nLet's visualize this data.\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}