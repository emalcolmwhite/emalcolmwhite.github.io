{
  "hash": "7249ea6ab6b09d1a3b4868f067a16e02",
  "result": {
    "markdown": "---\ntitle: 'Working with Categorical Data using `forcats`'\nauthor: 'Emily Malcolm-White'\nformat:\n  html: \n    toc: TRUE\n    code-overflow: wrap\n    embed-resources: true\n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n    code-annotations: hover\n  pdf: default\nexecute: \n  message: FALSE\n  warning: FALSE\n---\n\n\n\n\n\nThe R package `forcats` is designed to make working with categorical variables easier and more efficient. It provides a set of functions that allow you to manipulate and analyze categorical data with ease. In this lesson, we'll cover the basics of the `forcats` package and some of its most useful functions.\n\n![](https://forcats.tidyverse.org/logo.png){width=30%}\n\n## Categorical Variables\n\nLet's review what categorical data is. Categorical data is a type of data that consists of categories or labels.\n\nExamples of categorical data include:\n\n- Colors (red, blue, green, etc.)\n- Types of vehicles (sedan, SUV, truck)\n- Educational degrees (high school, college, graduate school)\n\nCategorical data can be further divided into two types: *nominal* and *ordinal*. Nominal data consists of categories that have no inherent order, while ordinal data consists of categories that have a natural order. For example, educational degrees are ordinal data because they can be ordered from least to most advanced.\n\n## `mpg` Data\n\nWe will play with different functions in the `forcats` packages using the `mpg` dataset from earlier in the semester. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forcats)\nlibrary(tidyverse)\ndata(\"mpg\")\n```\n:::\n\n\n\nRecall our side-by-side boxplot: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  ggplot(aes(x=class, y=hwy)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](118_H_forcats_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Reordering Factor Levels\n\nOne of the most useful functions is fct_relevel(), which allows you to reorder the levels of a factor. This can be useful when you want to change the default ordering of the levels or when you want to group certain levels together.\n\nIs `class` a factor?  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class %>% \n  is.factor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n\n\nLet's make it a factor! \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class <- mpg$class %>% \n  as.factor()\n\nmpg$class %>% \n  is.factor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n\nLet's check the levels and their current ordering! \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2seater\"    \"compact\"    \"midsize\"    \"minivan\"    \"pickup\"    \n[6] \"subcompact\" \"suv\"       \n```\n:::\n:::\n\n\n\nTo reorder the levels: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class <- mpg$class  %>% \n  fct_relevel(\"compact\",\"subcompact\",\"midsize\",\"2seater\",\"minivan\",\"suv\",\"pickup\")\n\nmpg$class %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"compact\"    \"subcompact\" \"midsize\"    \"2seater\"    \"minivan\"   \n[6] \"suv\"        \"pickup\"    \n```\n:::\n:::\n\n\n\nLet's recreate our side-by-side boxplot now: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg %>% \n  ggplot(aes(x=class, y=hwy)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](118_H_forcats_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\nRather than reordering them manually by typing the order, you could also re-level by some numeric criteria. For example: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class <- mpg$class %>% \n  fct_reorder(mpg$cty, median)\n\nmpg$class %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"suv\"        \"pickup\"     \"2seater\"    \"minivan\"    \"midsize\"   \n[6] \"subcompact\" \"compact\"   \n```\n:::\n:::\n\n\n\n\n## Renaming Factor levels\n\nSometimes you might not like the way the levels are named. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class <- mpg$class  %>% \n  fct_recode(\"two-seater\" = \"2seater\")\n\n## NEW NAME = OLD NAME\n\nmpg$class %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"suv\"        \"pickup\"     \"two-seater\" \"minivan\"    \"midsize\"   \n[6] \"subcompact\" \"compact\"   \n```\n:::\n\n```{.r .cell-code}\n#Check out the change in the mpg dataset\n```\n:::\n\n\n\n## Factor Collapsing\n\nLet's say we wanted to create only two categories -- cars and larger vehicles. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$class_two <- mpg$class %>% \n  fct_collapse(cars = c(\"compact\", \"subcompact\", \"midsize\", \"two-seater\"),\n               big = c(\"pickup\", \"suv\", \"minivan\"))\n\nmpg$class_two %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"big\"  \"cars\"\n```\n:::\n:::\n\n\n\n\n## Lumping into an other category\n\n- `fct_lump_min()`: lumps levels that appear fewer than min times.\n\n- `fct_lump_prop()`: lumps levels that appear in fewer than (or equal to) prop * n times.\n\n- `fct_lump_n()` lumps all levels except for the n most frequent (or least frequent if n < 0)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(mpg$manufacturer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      audi  chevrolet      dodge       ford      honda    hyundai       jeep \n        18         19         37         25          9         14          8 \nland rover    lincoln    mercury     nissan    pontiac     subaru     toyota \n         4          3          4         13          5         14         34 \nvolkswagen \n        27 \n```\n:::\n:::\n\n\n\nLet's say we wanted only the manufacturers with at least 15 cars produced. Everything else we want to just be other: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpg$manufacturer <- mpg$manufacturer %>%   fct_lump_min(15)\n\nmpg$manufacturer %>% \n  levels()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"audi\"       \"chevrolet\"  \"dodge\"      \"ford\"       \"toyota\"    \n[6] \"volkswagen\" \"Other\"     \n```\n:::\n:::\n",
    "supporting": [
      "118_H_forcats_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}