{
  "hash": "0b547293bb770d4d21d2afba4ef807c7",
  "result": {
    "markdown": "---\ntitle: 'filter, select, arrange, slice, mutate'\nauthor: 'Emily Malcolm-White'\nformat:\n  html: \n    toc: TRUE\n    code-overflow: wrap\n    embed-resources: true\n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n    code-annotations: hover\nexecute: \n  message: FALSE\n  warning: FALSE\n---\n\n\n:::{.callout-note title=\"Downloads for this page:\" icon=\"download\"}\n- 📖 [Complete Notes .qmd]118_B_wrangling_notes_emw.qmd)\n- 📝 [Blank Notes Template .qmd](118_B_wrangling_notes.qmd)\n- 📚 [Homework .qmd](118_B_wrangling_homework.qmd)\n:::\n\n# Installing and Using Packages\n\nSometimes everything we need (data, functions, etc) are not available in base R. In R, expert users will package up useful things like data and functions into packages that be download and used.\n\nFirst, you need to download the package from the right hand menu --\\> You only need to do this once.\n\nIn each new .qmd document, you need to call any packages you want to use but adding the code `library(packagename)` inside an R chunk.\n\nFor example, in this class we will use the `tidyverse` package a lot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) #<1>\n```\n:::\n\n\n1. Loads the `tidyverse` package\n\nThere are actually many commonly used packages wrapped up inside one `tidyverse` package.\n\n![Credit: https://uopsych-r-bootcamp-2020.netlify.app/](images/tidyverse_packages.png)\n\n\nToday we are specifically going to be talking about the package `dplyr` which is useful to manipulating data sets.\n\n\n# `can_lang` dataset \n\n![](https://github.com/ttimbers/canlang/blob/master/man/figures/hex-canlang.png?raw=true){width=30%}\n\nIn this class, we are going to be working with a dataset relating to the languages spoken at home by Canadian residents. Many Indigenous peoples exist in Canada with their own languages and cultures. Sadly, colonization has led to the loss of many of these languages. This data is a subset of data collected during the 2016 census. \n\n# Importing Data\n\nWhat is a .csv file?\n\nHow do we import it into R?\n\nUse `read.csv()`! Note that your data file (`.csv`) needs to be saved in the same folder as your notes template document (`.qmd`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_lang <- read.csv(\"data/can_lang.csv\") #<1>\n```\n:::\n\n\n1. Takes the `can_lang.csv` file (located in the same folder as your .qmd file), reads it into R, and saves it as the dataset `can_lang`\n\nAlternatively, you can download it directly from the internet. Github user `ttimbers` hosts this file to share with the public at the link: <https://raw.githubusercontent.com/ttimbers/canlang/master/inst/extdata/can_lang.csv>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_lang <- read.csv(\"https://raw.githubusercontent.com/ttimbers/canlang/master/inst/extdata/can_lang.csv\") #<1>\n```\n:::\n\n\n1. Takes the dataset located at the given url, reads it into R, and saves it as the dataset `can_lang`\n\nLet's take a look at this data for a minute to see what information has been recorded. In the environment in the top left, if you click on the word `can_lang` (not the blue play button, the word itself) it will open the object so you can see what is saved inside. Alternatively you can use the `head()` function to display just the first few rows of the dataset. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(can_lang)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                 category                       language\n1                    Aboriginal languages   Aboriginal languages, n.o.s.\n2 Non-Official & Non-Aboriginal languages                      Afrikaans\n3 Non-Official & Non-Aboriginal languages Afro-Asiatic languages, n.i.e.\n4 Non-Official & Non-Aboriginal languages                     Akan (Twi)\n5 Non-Official & Non-Aboriginal languages                       Albanian\n6                    Aboriginal languages   Algonquian languages, n.i.e.\n  mother_tongue most_at_home most_at_work lang_known\n1           590          235           30        665\n2         10260         4785           85      23415\n3          1150          445           10       2775\n4         13460         5985           25      22150\n5         26895        13135          345      31930\n6            45           10            0        120\n```\n:::\n:::\n\n\n# `filter`\n\nWe can use the `filter` function to extract ***rows*** from the data that have a particular characteristic.\n\n![Artwork by @allisonhorst](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/cb8d9c50-f48e-4c6d-a5b3-1d30ce0be2ad_rw_1920.png?h=1a879eda58a5efbf709ad0a59d784f98){width=80%}\n\nFor example, we may be interested in only looking at only the languages in this dataset that are Aboriginal languages.\n\nStart with the `can_lang dataset`, the pipe \"%>%\" means apply the action on the following line to the previous line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_lang  %>%                                  #<1>\n  filter(category == \"Aboriginal languages\")   #<2>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               category                     language mother_tongue most_at_home\n1  Aboriginal languages Aboriginal languages, n.o.s.           590          235\n2  Aboriginal languages Algonquian languages, n.i.e.            45           10\n3  Aboriginal languages                    Algonquin          1260          370\n4  Aboriginal languages Athabaskan languages, n.i.e.            50           10\n5  Aboriginal languages                    Atikamekw          6150         5465\n6  Aboriginal languages         Babine (Wetsuwet'en)           110           20\n7  Aboriginal languages                       Beaver           190           50\n8  Aboriginal languages                    Blackfoot          2815         1110\n9  Aboriginal languages                      Carrier          1025          250\n10 Aboriginal languages                       Cayuga            45           10\n11 Aboriginal languages                    Chilcotin           655          255\n12 Aboriginal languages                        Comox            85            0\n13 Aboriginal languages                 Cree, n.o.s.         64050        37950\n14 Aboriginal languages                       Dakota          1210          255\n15 Aboriginal languages                         Dene         10700         7710\n16 Aboriginal languages              Dogrib (Tlicho)          1650         1020\n17 Aboriginal languages            Gitxsan (Gitksan)           880          315\n18 Aboriginal languages                     Gwich'in           255           50\n19 Aboriginal languages                        Haida            80           10\n20 Aboriginal languages                       Haisla            90           20\n21 Aboriginal languages                   Halkomelem           480           50\n22 Aboriginal languages                     Heiltsuk           100            5\n23 Aboriginal languages   Inuinnaqtun (Inuvialuktun)          1020          165\n24 Aboriginal languages      Inuit languages, n.i.e.           310           90\n25 Aboriginal languages                    Inuktitut         35210        29230\n26 Aboriginal languages  Iroquoian languages, n.i.e.            35            5\n27 Aboriginal languages               Kaska (Nahani)           180           20\n28 Aboriginal languages                      Kutenai           110           10\n29 Aboriginal languages         Kwakiutl (Kwak'wala)           325           25\n30 Aboriginal languages                     Lillooet           315           25\n31 Aboriginal languages                     Malecite           300           55\n32 Aboriginal languages                      Mi'kmaq          6690         3565\n33 Aboriginal languages                       Michif           465           80\n34 Aboriginal languages                       Mohawk           985          255\n35 Aboriginal languages            Montagnais (Innu)         10235         8585\n36 Aboriginal languages                   Moose Cree           105           10\n37 Aboriginal languages                      Naskapi          1205         1195\n38 Aboriginal languages                      Nisga'a           400           75\n39 Aboriginal languages          North Slavey (Hare)           765          340\n40 Aboriginal languages           Northern East Cree           315          110\n41 Aboriginal languages            Northern Tutchone           220           30\n42 Aboriginal languages      Nuu-chah-nulth (Nootka)           280           30\n43 Aboriginal languages                     Oji-Cree         12855         7905\n44 Aboriginal languages                      Ojibway         17885         6175\n45 Aboriginal languages                     Okanagan           275           80\n46 Aboriginal languages                       Oneida            60           15\n47 Aboriginal languages               Ottawa (Odawa)           150           75\n48 Aboriginal languages                  Plains Cree          3065         1345\n49 Aboriginal languages     Salish languages, n.i.e.           260           25\n50 Aboriginal languages               Sarsi (Sarcee)            80           10\n51 Aboriginal languages                       Sekani            85           15\n52 Aboriginal languages      Shuswap (Secwepemctsin)           445           50\n53 Aboriginal languages     Siouan languages, n.i.e.            55           20\n54 Aboriginal languages               Slavey, n.o.s.           280          105\n55 Aboriginal languages                 South Slavey           945          370\n56 Aboriginal languages           Southern East Cree            45           15\n57 Aboriginal languages            Southern Tutchone            70            5\n58 Aboriginal languages                     Squamish            40            5\n59 Aboriginal languages                       Stoney          3025         1950\n60 Aboriginal languages                      Straits            80           25\n61 Aboriginal languages                  Swampy Cree          1440          330\n62 Aboriginal languages                      Tahltan            95            5\n63 Aboriginal languages       Thompson (Ntlakapamux)           335           20\n64 Aboriginal languages                      Tlingit            95            0\n65 Aboriginal languages                    Tsimshian           200           30\n66 Aboriginal languages   Wakashan languages, n.i.e.            10            0\n67 Aboriginal languages                   Woods Cree          1840          800\n   most_at_work lang_known\n1            30        665\n2             0        120\n3            40       2480\n4             0         85\n5          1100       6645\n6            10        210\n7             0        340\n8            85       5645\n9            15       2100\n10           10        125\n11           15       1150\n12            0        185\n13         7800      86115\n14           20       1760\n15          770      13060\n16          165       2375\n17           10       1305\n18           10        360\n19            0        465\n20            0        175\n21           20       1060\n22           10        125\n23           30       1975\n24           15        470\n25         8795      40620\n26            0        115\n27           10        365\n28            0        170\n29           15        605\n30           15        790\n31           10        760\n32          915       9025\n33           10       1210\n34           30       2415\n35         2055      11445\n36            0        195\n37          370       1465\n38           10       1055\n39           95       1005\n40           35        550\n41            0        280\n42           10        560\n43         1080      15605\n44          765      28580\n45           20        820\n46            0        185\n47            0        205\n48           95       5905\n49            0        560\n50            0        145\n51            0        185\n52           35       1305\n53            0        140\n54           10        675\n55           35       1365\n56            0         40\n57            0        145\n58           10        285\n59          240       3675\n60           15        365\n61           10       2350\n62            0        265\n63            0        450\n64           10        260\n65           10        410\n66            0         25\n67           75       2665\n```\n:::\n:::\n\n\n1. begin with the `can_lang` dataset\n2. only include the rows were the category variable is \"Aboriginal languages\"\n\nSome notes:\n\n-   the aboriginal languages is text/categorical and so quotation marks are needed.\n-   R doesn't care about whether they are double quotation marks (\") or single ('). They work the same.\n-   If we don't assign it to an object, then it just prints out for us to see!\n\nOftentimes, we want to take our subset and give it a new name. This takes our subset and assigns it to a new dataset called `aboriginal_lang`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naboriginal_lang <- can_lang  %>%             #<1> \n  filter(category == \"Aboriginal languages\")  \n```\n:::\n\n\n1. The code `aboriginal_lang <-` takes the given data (the Aboriginal languages in the `can_lang` dataset) and saves it as a new object called `aboriginal_lang`. \n\nNotes:\n\n-   Notice if you assign it to an object that it doesn't print out the contents.\n-   You'll see the new object in your environment on the top right ---\\>\n\n\nIt can also be used with numeric criteria.\n\nSuppose we want a list of all the languages in Canada that are spoken by less than 100 people as their mother tongue.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrare_lang <- can_lang  %>%        #<1>     \n  filter(mother_tongue < 100)     #<2>\n                                  #<3>\n```\n:::\n\n\n1. begin with the `can_lang` dataset\n2. only include the rows were the number of people who speak the language as their mother tongue is more than 100 people\n3. data saved to the object `rare_lang`\n\nThe logical operators are given below:\n\n| Operator | Description               |\n|----------|---------------------------|\n| `<`      | Less than                 |\n| `>`      | Greater than              |\n| `<=`     | Less than or equal to     |\n| `>=`     | Greater than or equal to  |\n| `==`     | Equal to                  |\n| `!=`     | Not equal to              |\n| `!x`     | Not x                     |\n| `x | y`  | x OR y                    |\n| `x & y`  | x AND y                   |\n\n\n# `select`\n\n`select` is used to extract only certain ***columns***. For example, perhaps we only want to print out a list names of the aboriginal languages (language column).\n\n\n::: {.cell}\n\n```{.r .cell-code}\naboriginal_lang %>%  #<1>\n  select(language)  #<2>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       language\n1  Aboriginal languages, n.o.s.\n2  Algonquian languages, n.i.e.\n3                     Algonquin\n4  Athabaskan languages, n.i.e.\n5                     Atikamekw\n6          Babine (Wetsuwet'en)\n7                        Beaver\n8                     Blackfoot\n9                       Carrier\n10                       Cayuga\n11                    Chilcotin\n12                        Comox\n13                 Cree, n.o.s.\n14                       Dakota\n15                         Dene\n16              Dogrib (Tlicho)\n17            Gitxsan (Gitksan)\n18                     Gwich'in\n19                        Haida\n20                       Haisla\n21                   Halkomelem\n22                     Heiltsuk\n23   Inuinnaqtun (Inuvialuktun)\n24      Inuit languages, n.i.e.\n25                    Inuktitut\n26  Iroquoian languages, n.i.e.\n27               Kaska (Nahani)\n28                      Kutenai\n29         Kwakiutl (Kwak'wala)\n30                     Lillooet\n31                     Malecite\n32                      Mi'kmaq\n33                       Michif\n34                       Mohawk\n35            Montagnais (Innu)\n36                   Moose Cree\n37                      Naskapi\n38                      Nisga'a\n39          North Slavey (Hare)\n40           Northern East Cree\n41            Northern Tutchone\n42      Nuu-chah-nulth (Nootka)\n43                     Oji-Cree\n44                      Ojibway\n45                     Okanagan\n46                       Oneida\n47               Ottawa (Odawa)\n48                  Plains Cree\n49     Salish languages, n.i.e.\n50               Sarsi (Sarcee)\n51                       Sekani\n52      Shuswap (Secwepemctsin)\n53     Siouan languages, n.i.e.\n54               Slavey, n.o.s.\n55                 South Slavey\n56           Southern East Cree\n57            Southern Tutchone\n58                     Squamish\n59                       Stoney\n60                      Straits\n61                  Swampy Cree\n62                      Tahltan\n63       Thompson (Ntlakapamux)\n64                      Tlingit\n65                    Tsimshian\n66   Wakashan languages, n.i.e.\n67                   Woods Cree\n```\n:::\n:::\n\n\n1. Begin with the `aboriginal_lang` dataset\n2. only include the language column\n\nWe can combine criteria together as well in one command with multiple pipes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncan_lang %>% \n  filter(category == \"Aboriginal languages\") %>% \n  select(language)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       language\n1  Aboriginal languages, n.o.s.\n2  Algonquian languages, n.i.e.\n3                     Algonquin\n4  Athabaskan languages, n.i.e.\n5                     Atikamekw\n6          Babine (Wetsuwet'en)\n7                        Beaver\n8                     Blackfoot\n9                       Carrier\n10                       Cayuga\n11                    Chilcotin\n12                        Comox\n13                 Cree, n.o.s.\n14                       Dakota\n15                         Dene\n16              Dogrib (Tlicho)\n17            Gitxsan (Gitksan)\n18                     Gwich'in\n19                        Haida\n20                       Haisla\n21                   Halkomelem\n22                     Heiltsuk\n23   Inuinnaqtun (Inuvialuktun)\n24      Inuit languages, n.i.e.\n25                    Inuktitut\n26  Iroquoian languages, n.i.e.\n27               Kaska (Nahani)\n28                      Kutenai\n29         Kwakiutl (Kwak'wala)\n30                     Lillooet\n31                     Malecite\n32                      Mi'kmaq\n33                       Michif\n34                       Mohawk\n35            Montagnais (Innu)\n36                   Moose Cree\n37                      Naskapi\n38                      Nisga'a\n39          North Slavey (Hare)\n40           Northern East Cree\n41            Northern Tutchone\n42      Nuu-chah-nulth (Nootka)\n43                     Oji-Cree\n44                      Ojibway\n45                     Okanagan\n46                       Oneida\n47               Ottawa (Odawa)\n48                  Plains Cree\n49     Salish languages, n.i.e.\n50               Sarsi (Sarcee)\n51                       Sekani\n52      Shuswap (Secwepemctsin)\n53     Siouan languages, n.i.e.\n54               Slavey, n.o.s.\n55                 South Slavey\n56           Southern East Cree\n57            Southern Tutchone\n58                     Squamish\n59                       Stoney\n60                      Straits\n61                  Swampy Cree\n62                      Tahltan\n63       Thompson (Ntlakapamux)\n64                      Tlingit\n65                    Tsimshian\n66   Wakashan languages, n.i.e.\n67                   Woods Cree\n```\n:::\n:::\n\n\n# `arrange`\n\nThe `arrange` function allows us to order the rows of the data frame by the values of a particular column.\n\nFor example, arrange all the aboriginal languages in canada by from most to least spoken as mother tongue.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naboriginal_lang %>% \n  arrange(desc(mother_tongue))  #<1>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               category                     language mother_tongue most_at_home\n1  Aboriginal languages                 Cree, n.o.s.         64050        37950\n2  Aboriginal languages                    Inuktitut         35210        29230\n3  Aboriginal languages                      Ojibway         17885         6175\n4  Aboriginal languages                     Oji-Cree         12855         7905\n5  Aboriginal languages                         Dene         10700         7710\n6  Aboriginal languages            Montagnais (Innu)         10235         8585\n7  Aboriginal languages                      Mi'kmaq          6690         3565\n8  Aboriginal languages                    Atikamekw          6150         5465\n9  Aboriginal languages                  Plains Cree          3065         1345\n10 Aboriginal languages                       Stoney          3025         1950\n11 Aboriginal languages                    Blackfoot          2815         1110\n12 Aboriginal languages                   Woods Cree          1840          800\n13 Aboriginal languages              Dogrib (Tlicho)          1650         1020\n14 Aboriginal languages                  Swampy Cree          1440          330\n15 Aboriginal languages                    Algonquin          1260          370\n16 Aboriginal languages                       Dakota          1210          255\n17 Aboriginal languages                      Naskapi          1205         1195\n18 Aboriginal languages                      Carrier          1025          250\n19 Aboriginal languages   Inuinnaqtun (Inuvialuktun)          1020          165\n20 Aboriginal languages                       Mohawk           985          255\n21 Aboriginal languages                 South Slavey           945          370\n22 Aboriginal languages            Gitxsan (Gitksan)           880          315\n23 Aboriginal languages          North Slavey (Hare)           765          340\n24 Aboriginal languages                    Chilcotin           655          255\n25 Aboriginal languages Aboriginal languages, n.o.s.           590          235\n26 Aboriginal languages                   Halkomelem           480           50\n27 Aboriginal languages                       Michif           465           80\n28 Aboriginal languages      Shuswap (Secwepemctsin)           445           50\n29 Aboriginal languages                      Nisga'a           400           75\n30 Aboriginal languages       Thompson (Ntlakapamux)           335           20\n31 Aboriginal languages         Kwakiutl (Kwak'wala)           325           25\n32 Aboriginal languages                     Lillooet           315           25\n33 Aboriginal languages           Northern East Cree           315          110\n34 Aboriginal languages      Inuit languages, n.i.e.           310           90\n35 Aboriginal languages                     Malecite           300           55\n36 Aboriginal languages      Nuu-chah-nulth (Nootka)           280           30\n37 Aboriginal languages               Slavey, n.o.s.           280          105\n38 Aboriginal languages                     Okanagan           275           80\n39 Aboriginal languages     Salish languages, n.i.e.           260           25\n40 Aboriginal languages                     Gwich'in           255           50\n41 Aboriginal languages            Northern Tutchone           220           30\n42 Aboriginal languages                    Tsimshian           200           30\n43 Aboriginal languages                       Beaver           190           50\n44 Aboriginal languages               Kaska (Nahani)           180           20\n45 Aboriginal languages               Ottawa (Odawa)           150           75\n46 Aboriginal languages         Babine (Wetsuwet'en)           110           20\n47 Aboriginal languages                      Kutenai           110           10\n48 Aboriginal languages                   Moose Cree           105           10\n49 Aboriginal languages                     Heiltsuk           100            5\n50 Aboriginal languages                      Tahltan            95            5\n51 Aboriginal languages                      Tlingit            95            0\n52 Aboriginal languages                       Haisla            90           20\n53 Aboriginal languages                        Comox            85            0\n54 Aboriginal languages                       Sekani            85           15\n55 Aboriginal languages                        Haida            80           10\n56 Aboriginal languages               Sarsi (Sarcee)            80           10\n57 Aboriginal languages                      Straits            80           25\n58 Aboriginal languages            Southern Tutchone            70            5\n59 Aboriginal languages                       Oneida            60           15\n60 Aboriginal languages     Siouan languages, n.i.e.            55           20\n61 Aboriginal languages Athabaskan languages, n.i.e.            50           10\n62 Aboriginal languages Algonquian languages, n.i.e.            45           10\n63 Aboriginal languages                       Cayuga            45           10\n64 Aboriginal languages           Southern East Cree            45           15\n65 Aboriginal languages                     Squamish            40            5\n66 Aboriginal languages  Iroquoian languages, n.i.e.            35            5\n67 Aboriginal languages   Wakashan languages, n.i.e.            10            0\n   most_at_work lang_known\n1          7800      86115\n2          8795      40620\n3           765      28580\n4          1080      15605\n5           770      13060\n6          2055      11445\n7           915       9025\n8          1100       6645\n9            95       5905\n10          240       3675\n11           85       5645\n12           75       2665\n13          165       2375\n14           10       2350\n15           40       2480\n16           20       1760\n17          370       1465\n18           15       2100\n19           30       1975\n20           30       2415\n21           35       1365\n22           10       1305\n23           95       1005\n24           15       1150\n25           30        665\n26           20       1060\n27           10       1210\n28           35       1305\n29           10       1055\n30            0        450\n31           15        605\n32           15        790\n33           35        550\n34           15        470\n35           10        760\n36           10        560\n37           10        675\n38           20        820\n39            0        560\n40           10        360\n41            0        280\n42           10        410\n43            0        340\n44           10        365\n45            0        205\n46           10        210\n47            0        170\n48            0        195\n49           10        125\n50            0        265\n51           10        260\n52            0        175\n53            0        185\n54            0        185\n55            0        465\n56            0        145\n57           15        365\n58            0        145\n59            0        185\n60            0        140\n61            0         85\n62            0        120\n63           10        125\n64            0         40\n65           10        285\n66            0        115\n67            0         25\n```\n:::\n:::\n\n\n1. arranges the languages from the language with the most to the least people who speak the language as their mother tongue\n\nNote:\n\n-   use arrange(variable) to go from least to most\n-   use arrange(desc(variable)) to go from most to least, arrange(-variable) also works\n\n# `slice`\n\nThe slice function will allow us to pick only a subset of the rows based on their numeric order (1st through last).\n\nFor example, if I want a list of the 10 most commonly spoken aboriginal languages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naboriginal_lang %>% \n  arrange(desc(mother_tongue)) %>% \n  slice(1:10)   #<1>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               category          language mother_tongue most_at_home\n1  Aboriginal languages      Cree, n.o.s.         64050        37950\n2  Aboriginal languages         Inuktitut         35210        29230\n3  Aboriginal languages           Ojibway         17885         6175\n4  Aboriginal languages          Oji-Cree         12855         7905\n5  Aboriginal languages              Dene         10700         7710\n6  Aboriginal languages Montagnais (Innu)         10235         8585\n7  Aboriginal languages           Mi'kmaq          6690         3565\n8  Aboriginal languages         Atikamekw          6150         5465\n9  Aboriginal languages       Plains Cree          3065         1345\n10 Aboriginal languages            Stoney          3025         1950\n   most_at_work lang_known\n1          7800      86115\n2          8795      40620\n3           765      28580\n4          1080      15605\n5           770      13060\n6          2055      11445\n7           915       9025\n8          1100       6645\n9            95       5905\n10          240       3675\n```\n:::\n:::\n\n\n1. Only include the first 10 rows of the dataset\n\n# `mutate`\n\n`mutate()` creates new columns that are functions of existing variables.\n\n![Artwork by @allisonhorst](https://cdn.myportfolio.com/45214904-6a61-4e23-98d6-b140f8654a40/bd4ae264-ae51-4d18-bd60-7a058ab42fba_rw_1920.png?h=a3757d1f46f418c59e7e7946d026344e)\n\nFor example, if I want to create a new column called `mother_tongue_K` which represents the number of people who speak the language their mother tongue in thousands. You may want to save this new dataset over top of the original dataset so you could use this new column in the future. \n\n\n::: {.cell}\n\n```{.r .cell-code}\naboriginal_lang <- aboriginal_lang %>% \n  mutate(mother_tongue_K = mother_tongue/1000) #<1>\n```\n:::\n\n\n1. Creates a new column called `mother_tongue_K` calculated by taking the `mother_tongue` column and dividing it by 1000. \n\nThis can be useful for unit conversions. It also be useful for making new calculations based on existing data (for example, price and number of square feet could be used to calculate price per square foot).\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}