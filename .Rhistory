?can_lang
#| warning: FALSE
#| message: FALSE
library(tidyverse) #<1>
can_lang <- read.csv("can_lang.csv") #<1>
can_lang <- read.csv("https://raw.githubusercontent.com/ttimbers/canlang/master/inst/extdata/can_lang.csv") #<1>
head(can_lang)
can_lang  %>%                                  #<1>
filter(category == "Aboriginal languages")   #<2>
aboriginal_lang <- can_lang  %>%             #<1>
filter(category == "Aboriginal languages")
rare_lang <- can_lang  %>%        #<1>
filter(mother_tongue < 100)     #<2>
#<3>
aboriginal_lang %>%  #<1>
select(language)  #<2>
can_lang %>%
filter(category == "Aboriginal languages") %>%
select(language)
aboriginal_lang %>%
arrange(desc(mother_tongue))  #<1>
View(can_lang)
?mutate
aboriginal_lang <- aboriginal_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
can_lang  %>%                                  #<1>
filter(category == "Aboriginal languages") %>%  #<2>
as.tibble()
?count
penguins %>%
count(species)
#LOAD PACKAGES
library(tidyverse)
#LOAD DATA
library(palmerpenguins) #<1>
data(penguins)          #<2>
penguins <- penguins %>%    #<2>
drop_na()                 #<1>
penguins %>%
count(species)
penguins %>%
count(island)
penguins %>%
filter(species == "Adelie") %>%
summarize(average_bill_lenth = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(average_bill_lenth = mean(bill_length_mm),
average_bill_depth = mean(bill_depth_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(average_bill_lenth = mean(bill_length_mm),  #<1>
average_bill_depth = mean(bill_depth_mm))
# Install required package
if (!require(rvest)) install.packages("rvest", dependencies=TRUE)
library(rvest)
get_definition_scrape <- function(word) {
url <- paste0("https://www.merriam-webster.com/dictionary/", word)
page <- read_html(url)
definition <- page %>%
html_nodes(".dtText") %>%  # CSS selector for definition text
html_text()
if (length(definition) > 0) {
return(definition)
} else {
return("Definition not found.")
}
}
# Example lookup
get_definition_scrape("apple")
# LOAD DATA SET
library(gapminder)
data(gapminder)
force(gapminder)
View(gapminder)
install.packages("tidyverse")
#| warning: FALSE
#| message: FALSE
library(tidyverse)
can_lang <- read.csv("can_lang.csv")
can_lang <- read.csv("can_lang.csv")
View(can_lang)
?filter
can_lang  %>%
filter(category == "Aboriginal languages")
aboriginal_lang <- can_lang  %>%
filter(category == "Aboriginal languages")
can_lang %>%
filter(mother_tongue < 100)
can_lang %>%
filter(mother_tongue < 100)
rare_lang <- can_lang %>%
filter(mother_tongue < 100)
aboriginal_lang <- can_lang  %>%
filter(category == "Aboriginal languages")
aboriginal_lang %>%
select(language)
aboriginal_lang %>%
select(language, mother_tongue)
aboriginal_lang %>%
select(!category)
aboriginal_lang %>%
select(language)
can_lang  %>%
filter(category == "Aboriginal languages") %>%
select(language)
aboriginal_lang %>%
arrange(mother_tongue)
aboriginal_lang %>%
arrange(-mother_tongue)
aboriginal_lang %>%
arrange( desc(mother_tongue) )
aboriginal_lang %>%
arrange(desc(mother_tongue))
aboriginal_lang %>%
arrange(desc(mother_tongue)) %>%
slice(1:10)
can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
can_lang <- can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
#| warning: FALSE
#| message: FALSE
library(tidyverse)
can_lang <- read.csv("can_lang.csv")
View(can_lang)
View(can_lang)
View(can_lang)
head(can_lang)
View(can_lang)
# Use keyboard shortcut for %>%  --
can_lang %>%
filter(category == "Aboriginal Languages")
# Use keyboard shortcut for %>%  --
can_lang %>%
filter(category == "Aboriginal languages")
# Use keyboard shortcut for %>%  --
can_lang %>%
filter(category == "Aboriginal languages")
aboriginal_lang <- can_lang %>%
filter(category == "Aboriginal languages")
aboriginal_lang <- can_lang %>%
filter(category == "Aboriginal languages")
aboriginal_lang
can_lang %>%
filter(mother_tongue < 100)
aboriginal_lang %>%
select(language)
aboriginal_lang %>%
select(language, mother_tongue)
can_lang %>%
filter(category == "Aboriginal languages") %>%
select(Language)
can_lang %>%
filter(category == "Aboriginal languages") %>%
select(language)
View(can_lang)
aboriginal_lang %>%
arrange(mother_tongue)
aboriginal_lang %>%
arrange(-mother_tongue)
aboriginal_lang %>%
arrange(desc(mother_tongue)) %>%
slice(1:10)
aboriginal_lang %>%
arrange(desc(mother_tongue)) %>%
slice(1:5)
aboriginal_lang %>%
arrange(desc(mother_tongue))
aboriginal_lang %>%
arrange(desc(mother_tongue)) %>%
slice(62:67)
aboriginal_lang %>%
arrange(desc(mother_tongue)) %>%
slice(1:10)
can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
can_lang <- can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
can_lang <- can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
can_lang <- can_lang %>%
mutate(mother_tongue_K <- mother_tongue/1000)
can_lang <- can_lang %>%
mutate(mother_tongue_K = mother_tongue/1000)
install.packages("quarto")
#LOAD PACKAGES
library(tidyverse)
#LOAD DATA
library(palmerpenguins)
data(penguins)
#LOAD DATA
library(palmerpenguins)
data(penguins)
force(penguins)
View(penguins)
View(penguins)
penguins %>%
drop_na()
penguins <- penguins %>%
drop_na()
penguins %>%
count(island)
island_count <- penguins %>%
count(island)
island_count <- penguins %>%
count(island)
island_count
island_count <- penguins %>%
count(island)
island_count
#OR
penguins %>%
count(island)
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(monkey = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins
penguins %>%
filter(species == "Adelie")
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mea(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie")
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm), Adelie_mean_bill_depth_mm = mean(bill_depth_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm),
Adelie_mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
count(island)
penguins %>%
count(island)
penguins %>%
summarize(value = n_distinct(island))
penguins %>%
count(island)
penguins %>%
summarize(value = n()) # this prints out the number of rows (333)
penguins %>%
summarize(value = n_distinct(island))
penguins %>%
count(island)
penguins %>%
filter(species == "Adelie") %>%
summarize(X = mean(bill_length_mm), Y = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm),
mean_bill_depth = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm),
median_bill_depth = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm),
median_bill_length = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm),
median_bill_length = median(bill_length_mm))
penguins %>%
filter(species == "Adelie")
summarize(mean_bill_length = mean(bill_length_mm),
median_bill_length = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(mean_bill_length = mean(bill_length_mm),
median_bill_length = median(bill_length_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm),
Adelie_mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
filter(species == "Adelie") %>%
summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm),
Adelie_mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
filter(species == "Gentoo") %>%
summarize(Gentoo_mean_bill_length_mm = mean(bill_length_mm),
Gentoo_mean_bill_depth_mm = mean(bill_depth_mm))
# penguins %>%
#   filter(species == "Adelie") %>%
#   summarize(Adelie_mean_bill_length_mm = mean(bill_length_mm),
#             Adelie_mean_bill_depth_mm = mean(bill_depth_mm))
#
# penguins %>%
#   filter(species == "Gentoo") %>%
#   summarize(Gentoo_mean_bill_length_mm = mean(bill_length_mm),
#             Gentoo_mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
group_by(species) %>%
summarize(mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
group_by(species, sex) %>%
summarize(mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
group_by(sex, species) %>%
summarize(mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
mutate(body_mass_lbs = body_mass_g*0.00220462)
penguins %>%
mutate(body_mass_lbs = body_mass_g*0.00220462)
penguins <- penguins %>%
mutate(body_mass_lbs = body_mass_g*0.00220462)
penguins <- penguins %>%
mutate(penguin_length_cat = case_when(bill_length_mm > 50 ~ 'whoa! huge bill!', TRUE ~ '--' ))
View(penguins)
#LOAD PACKAGES
library(tidyverse)
#LOAD DATA
library(palmerpenguins)
data(penguins)
force(penguins_raw)
View(penguins_raw)
force(penguins)
View(penguins)
penguins %>%
drop_na()
penguins <- penguins %>%
drop_na()
penguins %>%
count(island)
island_count <- penguins %>%
count(island)
island_count <- penguins %>%
count(island)
island_count
penguins %>%
summarize( mean_bill_length = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( sillyMOnkey = mean(bill_length_mm) )
penguins
penguins %>%
filter(species == "Adelie")
penguins %>%
filter(species == "Adelie")
penguins %>%
filter(species == "Adelie")
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie")
summarize( mean_bill_length_mm = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm), mean_bill_depth = mean(bill_depth_mm) )
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth = mean(bill_depth_mm))
penguins %>%
summarize( value = n())
penguins %>%
summarize( value = n_distinct(island))
penguins %>%
filter(species == "Adelie") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm))
penguins %>%
filter(species == "Gentoo") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm)
penguins %>%
penguins %>%
filter(species == "Gentoo") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm)
penguins %>%
penguins %>%
filter(species == "Gentoo") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm))
penguins %>%
filter(species == "Chinstrap") %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm))
penguins %>%
group_by(species) %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
median_bill_length_mm = median(bill_length_mm))
# penguins %>%
#   filter(species == "Gentoo") %>%
#   summarize( mean_bill_length_mm = mean(bill_length_mm),
#              median_bill_length_mm = median(bill_length_mm))
#
# penguins %>%
#   filter(species == "Chinstrap") %>%
#   summarize( mean_bill_length_mm = mean(bill_length_mm),
#              median_bill_length_mm = median(bill_length_mm))
penguins %>%
group_by(species) %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
summarize( value = n())
# n() never has any arguments inside , it doesn't care about a column name if it's just counting the number of row
penguins %>%
summarize( value = n_distinct(island))
# counts the number of distinct values within a column
penguins %>%
summarize( value = n())
# n() never has any arguments inside , it doesn't care about a column name if it's just counting the number of row
penguins %>%
summarize( value = n_distinct(island))
# counts the number of distinct values within a column
penguins %>%
summarize( value = n())
# n() never has any arguments inside , it doesn't care about a column name if it's just counting the number of row
penguins %>%
summarize( value = n_distinct(island))
# counts the number of distinct values within a column
penguins %>%
group_by(species, sex) %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
group_by(sex, species) %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
group_by(species, sex) %>%
summarize( mean_bill_length_mm = mean(bill_length_mm),
mean_bill_depth_mm = mean(bill_depth_mm))
penguins %>%
mutate(body_mass_lbs = body_mass_g*0.00220462)
penguins <- penguins %>%
mutate(body_mass_lbs = body_mass_g*0.00220462)
?geom_bar
??geom_bar
ggplot(ten_lang, aes(x = language, y = mother_tongue)) +
geom_bar(stat = "identity") +
coord_flip()
library(tidyverse)
#Import the can_lang dataset
can_lang <- read.csv("https://raw.githubusercontent.com/ttimbers/canlang/master/inst/extdata/can_lang.csv")
ten_lang <- can_lang %>%  #<1>
filter(category == "Aboriginal languages") %>% #<2>
arrange(desc(mother_tongue)) %>% #<3>
select(language, mother_tongue) %>%  #<4>
slice(1:10) #<5>
ten_lang %>% #<1>
ggplot(aes(x = language, y = mother_tongue)) + #<2>
geom_bar(stat = "identity") #<3>
library(tidyverse)
#Import the can_lang dataset
can_lang <- read.csv("https://raw.githubusercontent.com/ttimbers/canlang/master/inst/extdata/can_lang.csv")
ten_lang <- can_lang %>%  #<1>
filter(category == "Aboriginal languages") %>% #<2>
arrange(desc(mother_tongue)) %>% #<3>
select(language, mother_tongue) %>%  #<4>
slice(1:10) #<5>
ten_lang %>% #<1>
ggplot(aes(x = language, y = mother_tongue)) + #<2>
geom_bar(stat = "identity") #<3>
ggplot(ten_lang, aes(x = language, y = mother_tongue)) +
geom_bar(stat = "identity") +
coord_flip() #<1>
#OR
ggplot(ten_lang, aes(x = mother_tongue, y = language)) +
geom_bar(stat = "identity")
ggplot(ten_lang, aes(x = mother_tongue, y = reorder(language, mother_tongue))) + #<1>
geom_bar(fill="lightblue", stat = "identity") +
ylab("Language") +
xlab("Mother Tongue (Number of Canadian Residents)") +
ggtitle("Ten Aboriginal Languages Most Often \n Reported by Canadian Residents \n as Their Mother Tongue") +
theme_minimal()
