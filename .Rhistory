max(courses$dayCount)
courses %>%
ggplot(aes(x=dayCount)) +
geom_bar()
courses %>%
ggplot(aes(x=as.character(dayCount))) +
geom_bar()
courses %>%
ggplot(aes(x=as.factor(dayCount))) +
geom_bar()
courses %>%
ggplot(aes(x=as.character(dayCount))) +
geom_bar()
courses %>%
ggplot(aes(x=as.character(dayCount))) +
geom_bar() +
xlab("Number of days per week the class meets")
courses %>%
ggplot(aes(x=as.character(dayCount))) +
geom_bar() +
xlab("Number of days per week the class meets") +
ylab("Number of classes")
courses %>%
ggplot(aes(x=as.character(dayCount))) +
geom_bar(fill="blue") +
xlab("Number of days per week the class meets") +
ylab("Number of classes") +
theme_classic()
ymd("06 02 04")
#| warning: FALSE
#| message: FALSE
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
ymd("06 02 04")
ymd("06/02/04")
ymd("20060204")  # works as well
ymd("2006 2 4")
ymd(060204)  # works with numbers
ymd_hms("2020-04-01 10:30:13")
ymd_hm("2020/04/01 10.30")
today <- Sys.Date()
today <- Sys.Date()
age <- today - birthday
birthday <- ymd("1998-09-27")
year(birthday)      # 1998
month(birthday)     # 9
month(birthday, label = TRUE)  # "Sep"
day(birthday)       # 27
wday(birthday, label = TRUE)   # "Sun"
today <- Sys.Date()
age <- today - birthday
today <- Sys.Date()
age <- today - birthday
age
age <- today - birthday
time_length(age, "years" )
age <- today - birthday
age
time_length(age, "years" )
today + days(28)
portal_rodent <- portal_rodent %>%
mutate(datetime = make_datetime(year, month, day))
#LOAD DATA
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
portal_rodent <- portal_rodent %>%
mutate(datetime = make_datetime(year, month, day))
portal_rodent <- portal_rodent %>%
mutate(datetime = make_date(year, month, day))
portal_rodent |>
count(date) |>
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date")
portal_rodent <- portal_rodent %>%
mutate(datetime = make_date(year, month, day))
portal_rodent <- portal_rodent %>%
mutate(date = make_date(year, month, day))
portal_rodent |>
count(date) |>
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date")
#| warning: FALSE
#| message: FALSE
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
ymd("06 02 04")
ymd("06/02/04")
ymd("20060204")  # works as well
ymd("2006 2 4")
ymd(060204)  # works with numbers
ymd_hms("2020-04-01 10:30:13")
ymd_hm("2020/04/01 10.30")
birthday <- ymd("1998-09-27")
year(birthday)      # 1998
month(birthday)     # 9
month(birthday, label = TRUE)  # "Sep"
day(birthday)       # 27
wday(birthday, label = TRUE)   # "Sun"
today <- Sys.Date()
age <- today - birthday
age
time_length(age, "years" )
today + days(28)
#LOAD DATA
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
portal_rodent |>
count(date) |>
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date")
portal_rodent <- portal_rodent %>%
mutate(date = make_date(year, month, day))
portal_rodent |>
count(date) |>
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date")
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date")
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line() +
labs(title = "Rodent Trapping Over Time", y = "Number of Observations", x = "Date") +
theme_minimal()
portal_rodent |>
mutate(month = month(date, label = TRUE)) |>
count(month) |>
ggplot(aes(x = month, y = n)) +
geom_col() +
labs(title = "Trapping Frequency by Month", y = "Number of Observations")
portal_rodent %>%
mutate(month = month(date, label = TRUE)) %>%
count(month) %>%
ggplot(aes(x = month, y = n)) +
geom_col() +
labs(title = "Trapping Frequency by Month", y = "Number of Observations")
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line()
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line()
portal_rodent %>%
mutate(month_floor = floor_date(date, "month")) %>%
count(month_floor) %>%
ggplot(aes(x = month_floor, y = n)) +
geom_line()
portal_rodent <- portal_rodent %>%
mutate(
date = make_date(year, month, day),
season = case_when(
month %in% c(12, 1, 2) ~ "Winter",
month %in% c(3, 4, 5) ~ "Spring",
month %in% c(6, 7, 8) ~ "Summer",
month %in% c(9, 10, 11) ~ "Fall",
TRUE ~ NA_character_
)
)
portal_rodent %>%
count(season) %>%
ggplot(aes(x = season, y = n)) +
geom_line()
portal_rodent <- portal_rodent %>%
mutate(
date = make_date(year, month, day),
season = case_when(
month %in% c(12, 1, 2) ~ "Winter",
month %in% c(3, 4, 5) ~ "Spring",
month %in% c(6, 7, 8) ~ "Summer",
month %in% c(9, 10, 11) ~ "Fall",
TRUE ~ NA_character_
)
)
portal_rodent %>%
count(season) %>%
ggplot(aes(x = season, y = n)) +
geom_line()
#| warning: FALSE
#| message: FALSE
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
ymd("06 02 04")
ymd("06/02/04")
ymd("20060204")  # works as well
ymd("2006 2 4")
ymd(060204)  # works with numbers
ymd_hms("2020-04-01 10:30:13")
ymd_hm("2020/04/01 10.30")
birthday <- ymd("1998-09-27")
year(birthday)      # 1998
month(birthday)     # 9
month(birthday, label = TRUE)  # "Sep"
day(birthday)       # 27
wday(birthday, label = TRUE)   # "Sun"
today <- Sys.Date()
age <- today - birthday
age
time_length(age, "years" )
today + days(28)
#LOAD DATA
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
portal_rodent <- portal_rodent %>%
mutate(date = make_date(year, month, day))
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line()
portal_rodent %>%
mutate(month_floor = floor_date(date, "month")) %>%
count(month_floor) %>%
ggplot(aes(x = month_floor, y = n)) +
geom_line()
portal_rodent <- portal_rodent %>%
mutate(
date = make_date(year, month, day),
season = case_when(
month %in% c(12, 1, 2) ~ "Winter",
month %in% c(3, 4, 5) ~ "Spring",
month %in% c(6, 7, 8) ~ "Summer",
month %in% c(9, 10, 11) ~ "Fall",
TRUE ~ NA_character_
)
)
portal_rodent %>%
count(season) %>%
ggplot(aes(x = season, y = n)) +
geom_line()
portal_rodent %>%
count(season)
portal_rodent %>%
count(season) %>%
ggplot(aes(x = season, y = n)) +
geom_line()
portal_rodent %>%
count(season) %>%
ggplot(aes(x = season, y = n)) +
geom_col()
portal_rodent %>%
mutate(year_floor = floor_date(date, "year")) %>%
count(year_floor) %>%
ggplot(aes(x = month_floor, y = n)) +
geom_line()
#| warning: FALSE
#| message: FALSE
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
ymd("06 02 04")
ymd("06/02/04")
ymd("20060204")  # works as well
ymd("2006 2 4")
ymd(060204)  # works with numbers
ymd_hms("2020-04-01 10:30:13")
ymd_hm("2020/04/01 10.30")
birthday <- ymd("1998-09-27")
year(birthday)      # 1998
month(birthday)     # 9
month(birthday, label = TRUE)  # "Sep"
day(birthday)       # 27
wday(birthday, label = TRUE)   # "Sun"
today <- Sys.Date()
age <- today - birthday
age
time_length(age, "years" )
today + days(28)
#LOAD DATA
portal_rodent <- read.csv("https://github.com/weecology/PortalData/raw/main/Rodents/Portal_rodent.csv")
portal_rodent <- portal_rodent %>%
mutate(date = make_date(year, month, day))
portal_rodent %>%
count(date) %>%
ggplot(aes(x = date, y = n)) +
geom_line()
portal_rodent %>%
mutate(month_floor = floor_date(date, "month")) %>%
count(month_floor) %>%
ggplot(aes(x = month_floor, y = n)) +
geom_line()
portal_rodent %>%
mutate(year_floor = floor_date(date, "year")) %>%
count(year_floor) %>%
ggplot(aes(x = year_floor, y = n)) +
geom_line()
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
#LOAD DATA
library(nycflights13)
data("flights")
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
#LOAD DATA
library(nycflights23)
data("flights")
flights |>
mutate(week = floor_date(sched_departure_datetime, "week")) |>
group_by(weekday, week) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = week, y = fct_rev(weekday), fill = avg_delay)) +
geom_tile() +
scale_fill_viridis_c() +
labs(title = "Calendar Heatmap of Avg Departure Delays",
x = "Week", y = "Weekday") +
theme_minimal()
#LOAD PACKAGES
library(tidyverse)
library(lubridate)
#LOAD DATA
library(nycflights23)
data("flights")
flights |>
mutate(week = floor_date(sched_departure_datetime, "week")) |>
group_by(weekday, week) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = week, y = fct_rev(weekday), fill = avg_delay)) +
geom_tile() +
scale_fill_viridis_c() +
labs(title = "Calendar Heatmap of Avg Departure Delays",
x = "Week", y = "Weekday") +
theme_minimal()
flights %>%
mutate(sched_departure_datetime = make_datetime(year, month, day, hour = sched_dep_time %/% 100, min = sched_dep_time %% 100))
mutate(week = floor_date(sched_departure_datetime, "week")) |>
group_by(weekday, week) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = week, y = fct_rev(weekday), fill = avg_delay)) +
geom_tile() +
scale_fill_viridis_c() +
labs(title = "Calendar Heatmap of Avg Departure Delays",
x = "Week", y = "Weekday") +
theme_minimal()
flights %>%
mutate(sched_departure_datetime = make_datetime(year, month, day, hour = sched_dep_time %/% 100, min = sched_dep_time %% 100)) %>%
mutate(week = floor_date(sched_departure_datetime, "week")) |>
group_by(weekday, week) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = week, y = fct_rev(weekday), fill = avg_delay)) +
geom_tile() +
scale_fill_viridis_c() +
labs(title = "Calendar Heatmap of Avg Departure Delays",
x = "Week", y = "Weekday") +
theme_minimal()
flights %>%
mutate(sched_departure_datetime = make_datetime(year, month, day, hour = sched_dep_time %/% 100, min = sched_dep_time %% 100)) %>%
mutate(week = floor_date(sched_departure_datetime, "week")) |>
mutate(weekday = wday(sched_departure_datetime, label = TRUE, abbr = FALSE)) |>
group_by(weekday, week) |>
summarise(avg_delay = mean(dep_delay, na.rm = TRUE)) |>
ggplot(aes(x = week, y = fct_rev(weekday), fill = avg_delay)) +
geom_tile() +
scale_fill_viridis_c() +
labs(title = "Calendar Heatmap of Avg Departure Delays",
x = "Week", y = "Weekday") +
theme_minimal()
data <- read.csv(data/messy_student_survey.csv)
setwd("~/OneDrive - Middlebury College/emalcolmwhite.github.io/courses/stat0118")
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(~/courses/stat0118/data/messy_student_survey.csv)
setwd("~/OneDrive - Middlebury College/emalcolmwhite.github.io/courses/stat0118/data")
data <- read.csv(messy_student_survey.csv)
data <- read.csv(messy_student_survey.csv)
data <- read.csv(messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
setwd("~/OneDrive - Middlebury College/emalcolmwhite.github.io/courses/stat0118")
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv(data/messy_student_survey.csv)
data <- read.csv("data/messy_student_survey.csv")
data <- data %>%
clean_names()
library(tidyverse)
library(janitor)
data <- data %>%
clean_names()
names(data)
?clean_names
data <- data %>%
remove_empty("rows") %>%
remove_empty("cols")
library(tidyverse)
library(janitor)
data <- read.csv("data/messy_student_survey.csv")
data <- data %>%
clean_names()
names(data)
data <- data %>%
remove_empty("rows") %>%
remove_empty("cols")
data %>%
get_dupes()
library(tidyverse)
library(janitor)
data <- read.csv("data/messy_student_survey.csv")
data <- data %>%
clean_names()
names(data)
data <- data %>%
remove_empty("rows") %>%
remove_empty("cols")
data %>%
get_dupes()
data %>%
tabyl(year_level) %>%
adorn_totals("row") %>%
adorn_percentages("col") %>%
adorn_pct_formatting()
data <- data %>%
remove_empty("rows") %>%
remove_empty("cols")
data %>%
get_dupes()
data <- data %>%
distinct()
data <- read.csv("https://github.com/sfirke/janitor/blob/main/dirty_data.xlsx")
data <- read_excel("https://github.com/sfirke/janitor/blob/main/dirty_data.xlsx")
library(tidyverse)
library(readxl)
library(janitor)
data <- read_excel("https://github.com/sfirke/janitor/blob/main/dirty_data.xlsx")
roster <- read_excel("https://github.com/sfirke/janitor/blob/main/dirty_data.xlsx")
roster <- read_excel("https://github.com/sfirke/janitor/raw/refs/heads/main/dirty_data.xlsx")
roster <- read_excel("https://github.com/sfirke/janitor/raw/refs/heads/main/dirty_data.xlsx")
raw_roster <- read_excel("data/raw_roster.xlsx")
raw_roster <- read_excel("data/raw_roster.xlsx")
View(raw_roster)
roster <- roster_raw %>%
row_to_names(row_number = 1)
roster_raw <- read_excel("data/raw_roster.xlsx")
roster <- roster_raw %>%
row_to_names(row_number = 1)
roster <- roster_raw %>%
row_to_names(row_number = 1) %>%
clean_names()
roster <- roster_raw %>%
row_to_names(row_number = 1) %>%
clean_names()
View(roster)
roster_raw <- read_excel("data/raw_roster.xlsx")
View(raw_roster)
roster <- roster_raw %>%
row_to_names(row_number = 1) %>%
clean_names()
roster <- roster_raw %>%
row_to_names(row_number = 1) %>%
clean_names()
View(roster)
roster <- roster %>%
select(-do_not_edit)
roster <- roster %>%
remove_empty("rows") %>%
remove_empty("cols")
roster %>%
get_dupes()
roster %>%
tabyl(subject) %>%
adorn_totals("row") %>%
adorn_percentages("col") %>%
adorn_pct_formatting()
roster %>%
filter(hire_date > as.Date("1950-01-01")) %>%
tabyl(employee_status, full_time)
roster_raw <- read_excel("data/raw_roster.xlsx")
glimpse(roster_raw)
#| echo: FALSE
library(dtplyr)
#| echo: FALSE
library(DT)
roster_raw <- read_excel("data/raw_roster.xlsx")
roster_raw %>%
datatable()
#| echo: FALSE
roster_raw %>%
datatable( options = list(searching = FALSE))
#| echo: FALSE
roster_raw %>%
datatable( options = list(searching = FALSE,
lengthChange = FALSE
))
#| echo: FALSE
roster_raw %>%
datatable( options = list(searching = FALSE,
lengthChange = FALSE
buttons = c('copy', 'csv', 'excel')),
#| echo: FALSE
roster_raw %>%
datatable( options = list(searching = FALSE,
lengthChange = FALSE,
buttons = c('copy', 'csv', 'excel')),
extensions = 'Buttons
)
#| echo: FALSE
roster_raw %>%
datatable( options = list(searching = FALSE,
lengthChange = FALSE,
buttons = c('copy', 'csv', 'excel')),
extensions = 'Buttons'
)
