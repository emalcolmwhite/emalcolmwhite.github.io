#LOAD PACKAGES
#install.packages("sf") - note some students are getting a pop-up when they install the sf package for the first time. Select the "no" option when it pops up in your console.
library(sf)
#some students are needing into install the rgeos package seperately as well
#library(rgeos)
demo(nc, ask = FALSE, echo = FALSE)
nc %>%
ggplot() +
geom_sf()
nc %>%
ggplot() +
geom_sf(col="black", fill="darkgrey") +
theme_light() +
ggtitle("North Carolina Counties")
nc %>%
ggplot() +
geom_sf( aes(fill = BIR74), col ="black") +
theme_light()+
ggtitle("North Carolina, Birth Rates in 1974")
library(RColorBrewer)
barplot(1:5, col = brewer.pal(5, "Set1"))
ggplot(mpg, aes(class, fill = class)) +
geom_bar() +
scale_fill_brewer(palette = "Set1")
library(ggplot2)
library(RColorBrewer)
# Example dataset
df <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Create bar chart with qualitative colors
ggplot(df, aes(x = category, y = values, fill = category)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set1") +
theme_minimal()
library(ggplot2)
library(RColorBrewer)
# Example dataset
df <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Create bar chart with qualitative colors
ggplot(df, aes(x = category, y = values, fill = category)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
library(ggplot2)
library(RColorBrewer)
# Example dataset
df <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Create bar chart with qualitative colors
ggplot(df, aes(x = category, y = values, fill = category)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme() +
labs(main = "Qualitative Palettes", subtitle = "For non-ordered categortical varibles")
library(ggplot2)
library(RColorBrewer)
# Example dataset
df <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Create bar chart with qualitative colors
ggplot(df, aes(x = category, y = values, fill = category)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(legend.position = "none") +
labs(main = "Qualitative Palettes", subtitle = "For non-ordered categortical varibles")
library(ggplot2)
library(RColorBrewer)
# Example dataset
df <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Create bar chart with qualitative colors
ggplot(df, aes(x = category, y = values, fill = category)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "Qualitative Palettes", subtitle = "For non-ordered categortical varibles")
ggplot(mpg, aes(displ, hwy, color = hwy)) +
geom_point(size = 3) +
scale_color_viridis_c()
par(mfrow = c(2, 3))  # Set layout to 2 rows, 3 columns
show_palette(brewer.pal(8, "Set1"), "RColorBrewer - Qualitative (Set1)")
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
par(mfrow = c(2, 3))  # Set layout to 2 rows, 3 columns
show_palette(brewer.pal(8, "Set1"), "RColorBrewer - Qualitative (Set1)")
#LOAD PACKAGES
library(tidyverse)
#install.packages("sf") - note some students are getting a pop-up when they install the sf package for the first time. Select the "no" option when it pops up in your console.
library(sf)
#some students are needing into install the rgeos package seperately as well
#library(rgeos)
demo(nc, ask = FALSE, echo = FALSE)
nc %>%
ggplot() +
geom_sf()
nc %>%
ggplot() +
geom_sf(col="black", fill="darkgrey") +
theme_light() +
ggtitle("North Carolina Counties")
nc %>%
ggplot() +
geom_sf( aes(fill = BIR74), col ="black") +
theme_light()+
ggtitle("North Carolina, Birth Rates in 1974")
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
# Example categorical data
df_qual <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Example continuous data
df_cont <- expand.grid(x = 1:10, y = 1:10)
df_cont$value <- runif(100, min = -5, max = 5)  # Diverging data
# Function to display color palettes
show_palette <- function(colors, title = "Color Palette") {
barplot(rep(1, length(colors)), col = colors, border = NA, main = title, axes = FALSE)
}
par(mfrow = c(2, 3))  # Set layout to 2 rows, 3 columns
show_palette(brewer.pal(8, "Set1"), "RColorBrewer - Qualitative (Set1)")
show_palette(wes_palette("GrandBudapest1"), "Wes Anderson - Qualitative (GrandBudapest1)")
show_palette(viridis_pal(option = "magma")(8), "Viridis - Sequential (Magma)")
show_palette(brewer.pal(9, "Blues"), "RColorBrewer - Sequential (Blues)")
show_palette(brewer.pal(11, "RdBu"), "RColorBrewer - Diverging (RdBu)")
show_palette(wes_palette("Zissou1"), "Wes Anderson - Diverging (Zissou1)")
#| echo: FALSE
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
# Example categorical data
df_qual <- data.frame(
category = factor(LETTERS[1:8]),
values = sample(10:100, 8)
)
# Example continuous data
df_cont <- expand.grid(x = 1:10, y = 1:10)
df_cont$value <- runif(100, min = -5, max = 5)  # Diverging data
# Function to display color palettes
show_palette <- function(colors, title = "Color Palette") {
barplot(rep(1, length(colors)), col = colors, border = NA, main = title, axes = FALSE)
}
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "magma") +
theme_light()
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "plasma") +
theme_light()
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "cividis") +
theme_light()
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "viridis") +
theme_light()
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "magma") +
theme_light()
?scale_fill_viridis_c
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "magma", direction = 0) +
theme_light()
ggplot(nc) +
geom_sf() +
aes(fill = BIR74) +
ggtitle("North Carolina, Birth Rates in 1974") +
scale_fill_viridis_c(option = "magma", direction = -1) +
theme_light()
#| echo: FALSE
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
show_palette <- function(colors, title = "Color Palette") {
barplot(rep(1, length(colors)), col = colors, border = NA, main = title, axes = FALSE)
}
show_col(brewer.pal(8, "Set1"))
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(8, "Set1"))
show_palette(wes_palette("Moonrise2"), "Wes Anderson - Moonrise2")
?show_col
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(8, "Set1"))
show_palette(wes_palette("Moonrise2"))
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(8, "Set1"))
show_col(wes_palette("Moonrise2")
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(8, "Set1"))
show_col(wes_palette("Moonrise2"))
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(viridis_pal(option = "magma")(8))
show_col(brewer.pal(9, "Blues"))
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(viridis_pal(option = "magma")(8), ncol=8)
show_col(brewer.pal(9, "Blues"), ncol=9)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(viridis_pal(option = "magma")(8), ncol=8, label=FALSE)
show_col(brewer.pal(9, "Blues"), ncol=9, label=FALSE)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_palette(brewer.pal(11, "RdBu"), ncol=11, label=FALSE)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(11, "RdBu"), ncol=11, label=FALSE)
show_col(brewer.pal(9, "Spectral"), ncol=9, label=FALSE)
map +
scale_fill_viridis_c(option = "magma", direction = -1)+
geom_sf_text(data = nc[nc$BIR74 >15000,], aes(label = NAME), fontface="bold")
#LOAD PACKAGES
library(tidyverse)
#install.packages("sf") - note some students are getting a pop-up when they install the sf package for the first time. Select the "no" option when it pops up in your console.
library(sf)
#some students are needing into install the rgeos package seperately as well
#library(rgeos)
demo(nc, ask = FALSE, echo = FALSE)
nc %>%
ggplot() +
geom_sf()
nc %>%
ggplot() +
geom_sf(col="black", fill="darkgrey") +
theme_light() +
ggtitle("North Carolina Counties")
map <- nc %>%
ggplot() +
geom_sf( aes(fill = BIR74), col ="black") +
theme_light()+
ggtitle("North Carolina, Birth Rates in 1974")
map
#| echo: FALSE
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
show_palette <- function(colors, title = "Color Palette") {
barplot(rep(1, length(colors)), col = colors, border = NA, main = title, axes = FALSE)
}
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(8, "Set2"), label=FALSE, ncol=8)
show_col(wes_palette("Moonrise2"), ncol=4, label=FALSE)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(viridis_pal(option = "magma")(8), ncol=8, label=FALSE)
show_col(brewer.pal(9, "Blues"), ncol=9, label=FALSE)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
show_col(brewer.pal(11, "RdBu"), ncol=11, label=FALSE)
show_col(brewer.pal(9, "Spectral"), ncol=9, label=FALSE)
library(RColorBrewer)
map +
scale_fill_viridis_c(option = "magma", direction = -1)
map +
scale_fill_viridis_c(option = "magma", direction = -1)+
geom_sf_text(data = nc[nc$BIR74 >15000,], aes(label = NAME), fontface="bold")
map +
scale_fill_viridis_c(option = "magma", direction = -1)+
geom_sf_text(aes(label = NAME), fontface="bold")
map +
scale_fill_viridis_c(option = "magma", direction = -1)+
geom_sf_text(aes(label = NAME))
map +
scale_fill_viridis_c(option = "magma", direction = -1)+
geom_sf_text(aes(label = NAME), size = 1)
#| echo: FALSE
# Install if not already installed
library(RColorBrewer)
library(viridis)
library(wesanderson)
library(scales)
display_palette <- function(colors) {
df <- data.frame(x = seq_along(colors), color = colors)
ggplot(df, aes(x = factor(x), y = 1, fill = color)) +
geom_tile() +
scale_fill_identity() +
theme_void() +
theme(legend.position = "none")
}
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
display_palette(brewer.pal(8, "Set2"), label=FALSE, ncol=8)
#| fig-height: 2
#| echo: FALSE
par(mfrow = c(1, 2))
display_palette(brewer.pal(8, "Set2"))
display_palette(wes_palette("Moonrise2"))
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("nz")
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("nz")
data("us_states")
data("us_counties")
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("nz")
data("us_states")
force(us_states)
View(us_states)
spData
?spData
??spData
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("ggnewscale")
??ggnewscale
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("us_states")
library(rnaturalearth)
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("us_states")
library(rnaturalearth)
library(rnaturalearthdata)
#LOAD DATA
library(spData) #this packages contains the dataset (with sf objects) that we will be using today
data("us_states")
library(rnaturalearth)
library(rnaturalearthdata)
world <- ne_countries(scale = "medium", returnclass = "sf")
View(world)
?rnaturalearth
?rnaturalearthdata
source("~/Library/CloudStorage/OneDrive-MiddleburyCollege/HexStickers/Datafest2025_sticker_code.R")
setwd("~/OneDrive - Middlebury College/HexStickers")
source("~/Library/CloudStorage/OneDrive-MiddleburyCollege/HexStickers/Datafest2025_sticker_code.R")
source("~/Library/CloudStorage/OneDrive-MiddleburyCollege/HexStickers/Datafest2025_sticker_code.R")
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1.01, s_y = 0.88, s_width = 1.4, s_height=1,
#specify package name & characteristics
package="MATH 0710",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = "Advanced Probability",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
#Image
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1.01, s_y = 0.88, s_width = 1.4, s_height=1,
#specify package name & characteristics
package=" ",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = "2025",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
#Image
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1.01, s_y = 0.88, s_width = 1.8, s_height=1,
#specify package name & characteristics
package=" ",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = "2025",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
#Image
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1, s_y = 1, s_width = 1.8, s_height=1,
#specify package name & characteristics
package=" ",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = "2025",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
#Image
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1, s_y = 1, s_width = 1.7, s_height=1,
#specify package name & characteristics
package=" ",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = "2025",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
#Image
img <- image_read("Datafest2025_image.jpg")
#Create Sticker
hex <- sticker(
#specific image & characteristics
img,
s_x = 1, s_y = 1, s_width = 1.7, s_height=1,
#specify package name & characteristics
package=" ",
p_size=36, p_color = "#0D395F", p_family = "bitter",p_fontface = "bold",
# border characteristics
h_fill="white", h_color="#000000",h_size = 1,
#specify text in bottom right & characteristics
url = " ",
u_size=14, u_color = "#0D395F",u_family="bitter",
u_angle=0,u_x=0.49, u_y=0.45,
#save to...
filename = "Datafest2025_hex_sticker.png",
dpi=500)
plot(hex)
setwd("~/OneDrive - Middlebury College/emalcolmwhite.github.io")
setwd("~/OneDrive - Middlebury College/emalcolmwhite.github.io")
