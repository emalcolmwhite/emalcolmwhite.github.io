[
  {
    "objectID": "courses/stat0118/118_G_maps_notes.html",
    "href": "courses/stat0118/118_G_maps_notes.html",
    "title": "Maps with maps and sf",
    "section": "",
    "text": "R is fantastic for spacial analysis (not covered in this class‚Ä¶ look for classes related to spacial statistics)\nR is great for interactive data visualization (via leaflet or shiny‚Ä¶ more on this on Thursday)\nR is okay at spacial data visualization (creating maps).\n\nThere are many different packages in R for creating maps. I‚Äôve found that different packages perform best for different maps. We will talk about a few different ones today.\nIf you have a highly map-centric project, there is nothing wrong with working in ArcGIS or QGIS if you find the mapping tools in R insufficient. There are many recent improvements with new packages (like sp, rgdal and rgeos) which profiles much of the functionality of GIS packages! Exciting! (not very beginner friendly - requires familiarity with GIS concepts)"
  },
  {
    "objectID": "courses/stat0118/118_G_maps_notes.html#qualitative-color-palettes",
    "href": "courses/stat0118/118_G_maps_notes.html#qualitative-color-palettes",
    "title": "Maps with maps and sf",
    "section": "Qualitative Color Palettes",
    "text": "Qualitative Color Palettes\n\n\n\n\n\n\n\nBest for‚Ä¶\nCategories (unordered)\n\n\nExamples\nSpecies, Groups, Brands\n\n\nRColorBrewer Palettes\n\"Set1\", \"Dark2\", \"Paired\"\n\n\nExample R Code\nscale_fill_brewer(palette = \"Set1\")\n\n\nwesanderson Palettes\n\"GrandBudapest1\", \"Darjeeling1\", \"Moonrise2\"\n\n\nExample R Code\nscale_fill_manual(values = wes_palette(\"GrandBudapest1\"))"
  },
  {
    "objectID": "courses/stat0118/118_G_maps_notes.html#sequential-color-palettes",
    "href": "courses/stat0118/118_G_maps_notes.html#sequential-color-palettes",
    "title": "Maps with maps and sf",
    "section": "Sequential Color Palettes",
    "text": "Sequential Color Palettes\n\n\n\n\n\n\n\nBest for‚Ä¶\nOrdered, continuous data\n\n\nExamples\nTemperature, Population Density\n\n\nRColorBrewer Palettes\n\"Blues\", \"Reds\", \"Greens\"\n\n\nExample R Code\nscale_fill_brewer(palette = \"Blues\")\n\n\nviridis Palettes\n\"viridis\", \"magma\", \"plasma\", \"cividis\"\n\n\nExample R Code\nscale_fill_viridis_c(option = \"magma\")\n\n\nBuild your Own\nscale_fill_gradientn(c(\"red\", \"yellow\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote: Be sure that higher values are encoded with the darkest colors!"
  },
  {
    "objectID": "courses/stat0118/118_G_maps_notes.html#diverging-color-palettes",
    "href": "courses/stat0118/118_G_maps_notes.html#diverging-color-palettes",
    "title": "Maps with maps and sf",
    "section": "Diverging Color Palettes",
    "text": "Diverging Color Palettes\n\n\n\n\n\n\n\nBest for‚Ä¶\nData with a central midpoint\n\n\nExamples\nElection Results, Anomaly Detection\n\n\nRColorBrewer Palettes\n\"RdBu\", \"Spectral\"\n\n\nExample R Code\nscale_fill_brewer(palette = \"RdBu\")\n\n\nBuild your Own\nscale_fill_manual(values = c(\"red\", \"orange\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSome general guidelines when choosing color palettes:\n\n\n\n‚úÖ Match palette type to data type\n‚úÖ Choose colorblind-friendly palettes when designing for general audiences\n‚úÖ Limit colors to avoid overwhelming the reader - for categortical data limit the number of distinct colors to 5-8 max (beyond that, consider grouping)\n‚úÖ Consider the meaning of colors in your audience‚Äôs cultural context.\nüî¥ Avoid: Using blue for land in maps"
  },
  {
    "objectID": "courses/stat0118/118_G_maps_notes.html#adding-labels-with-geom_sf_text",
    "href": "courses/stat0118/118_G_maps_notes.html#adding-labels-with-geom_sf_text",
    "title": "Maps with maps and sf",
    "section": "Adding labels with geom_sf_text()",
    "text": "Adding labels with geom_sf_text()"
  },
  {
    "objectID": "courses/math102/index.html",
    "href": "courses/math102/index.html",
    "title": "EMW",
    "section": "",
    "text": "More Coming Soon!"
  },
  {
    "objectID": "courses/math102/index.html#math-102-logs-exponentials-and-their-applications",
    "href": "courses/math102/index.html#math-102-logs-exponentials-and-their-applications",
    "title": "EMW",
    "section": "",
    "text": "More Coming Soon!"
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html",
    "href": "courses/stat0118/118_stringr_notes.html",
    "title": "working with text with stringr",
    "section": "",
    "text": "#LOAD PACKAGES \nlibrary(tidyverse)\nlibrary(stringr)"
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html#a-few-basics",
    "href": "courses/stat0118/118_stringr_notes.html#a-few-basics",
    "title": "working with text with stringr",
    "section": "A few basics",
    "text": "A few basics\nWhat is a string?\nA string is a data type used to represent text. In R, we indicate that something is a string by referring to it with quotes.\nExamples of strings:\n\n\n\n\n\nNOT a string:\n\n\n\nWhat is  stringr ?\nstringr is a package containing a bunch of functions that help us work with strings.\nstringr cheat sheet"
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html#str_detect",
    "href": "courses/stat0118/118_stringr_notes.html#str_detect",
    "title": "working with text with stringr",
    "section": "str_detect",
    "text": "str_detect\ninputs:\n\na string (or a column of strings) to search from\n\na string to search for\n\noutput: boolean value (TRUE or FALSE)\nlittle example:\nI only want to take classes in Warner! Let‚Äôs filter for rows where we detect the word ‚ÄúWarner‚Äù in the location column.\nSuppose I don‚Äôt want any classes on Friday. Let‚Äôs use str_detect to find our options.\nPerhaps I‚Äôm interested in artificial intelligence. We can use str_detect to find course descriptions that mention artificial intelligence.\nThe regex function is used to write regular expressions in R. Regular expressions are helpful if you want to search for a pattern rather than a specific word or phrase.\nFor now, we will only use regex to ignore capitalization. If you‚Äôre interested in using regular expressions at some point, this regex cheat sheet will be super helpful."
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html#str_extract-and-str_remove",
    "href": "courses/stat0118/118_stringr_notes.html#str_extract-and-str_remove",
    "title": "working with text with stringr",
    "section": "str_extract and str_remove",
    "text": "str_extract and str_remove\nstr_extract inputs:\n\na string (or a column of strings) to extract from\n\na string to extract\n\nstr_extract output: the string you wanted to extract OR nothing\nstr_remove inputs:\n\na string (or a column of strings) to remove stuff from\n\na string to remove\n\nstr_remove output: the first input string with the second input removed\nlittle example:\nCW is part of the distribution requirement column. I want CW to be its own column.\nFirst we can create a new column called isCW by extracting instances of ‚ÄúCW‚Äù from the distros column in each row.\nThen we can remove all instances of ‚ÄúCW‚Äù from the distros column."
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html#str_sub",
    "href": "courses/stat0118/118_stringr_notes.html#str_sub",
    "title": "working with text with stringr",
    "section": "str_sub",
    "text": "str_sub\nstr_sub inputs:\n\na string (or a column of strings) take substrings of\n\nwhere the substring should start\nwhere the substring should end\n\nstr_sub output: the substring\nlittle example:\nMaybe I only want 200 level math and stats classes.\nFirst we filter for just math/stats classes. Then we can create a new column called level that contains only the sixth character from the courses column.\nWe can then filter our level column for specific course levels."
  },
  {
    "objectID": "courses/stat0118/118_stringr_notes.html#str_count",
    "href": "courses/stat0118/118_stringr_notes.html#str_count",
    "title": "working with text with stringr",
    "section": "str_count",
    "text": "str_count\nlittle example:\nstr_count inputs:\n\na string (or a column of strings) to count from\n\na string you want to count the number of instances of\n\nstr_count output: the number of times the second string occurs in your first string\nMaybe I only want my classes to meet twice a week. Let‚Äôs count how many times ‚Äúday‚Äù appears in the meet column and put this value in a new column called dayCount. dayCount represents how many days a week a class meets.\nLet‚Äôs visualize this data."
  },
  {
    "objectID": "courses/stat0118/118_project_template.html",
    "href": "courses/stat0118/118_project_template.html",
    "title": "YOUR WITTY TITLE HERE",
    "section": "",
    "text": "Code\n#LOAD PACKAGES\nlibrary(tidyverse)\n\n\n\nIntroduction\n\n\nResults\n\n\nDiscussion\n\n\nAuthor Contributions\n\n\nReferences\n\n\nSupplemental Materials"
  },
  {
    "objectID": "courses/stat0118/index.html",
    "href": "courses/stat0118/index.html",
    "title": "STAT 118: Intro to Data Science",
    "section": "",
    "text": "Use the sidebar to navigate through course topics and download notes, templates, and homework assignments."
  },
  {
    "objectID": "courses/stat0118/118_gganimate.html",
    "href": "courses/stat0118/118_gganimate.html",
    "title": "Animating plots using gganimate",
    "section": "",
    "text": "Artwork by @allisonhorst\n\n\n\nlibrary(tidyverse)\nlibrary(gganimate)\nlibrary(lubridate)\n\n\nStorms Data\nThe storms dataset from the dplyr package. This dataset tracks tropical storms in the North Atlantic, including wind speed, pressure, and location over time ‚Äî making it perfect for animation.\n\ndata(\"storms\")\n\n\nname: storm name\nyear, month, day, hour: timestamp info\nlat, long: geographic location\nwind: wind speed (in knots)\npressure: atmospheric pressure (hPa)\nstatus: classification (tropical storm, hurricane, etc.)\n\nLet‚Äôs animate the path of one specific storm ‚Äì Katrina in 2005.\nLet‚Äôs get the data in an appropriate format.\n\nkatrina &lt;- storms %&gt;%\n  filter(name == \"Katrina\", year == 2005) %&gt;%\n  mutate(time = make_datetime(year, month, day, hour))\n\nIt‚Äôs usually useful to start with a static plot:\n\nggplot(katrina, aes(x = long, y = lat)) +\n  geom_path(color = \"gray\") +\n  geom_point(aes(size = wind, color = pressure), alpha = 0.8) +\n  coord_fixed() +\n  theme_minimal() +\n  labs(title = \"Hurricane Katrina: Wind and Pressure\", x = \"Longitude\", y = \"Latitude\")\n\n\n\n\nI also think it would be cool to add a map behind it. Let‚Äôs pull one from the rnaturalearth package.\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(sf)\n\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n\nplot &lt;- ggplot() +\n  # World landmasses\n  geom_sf(data = world, fill = \"#f0f0f0\", color=\"#8f8d8d\", linewidth = 0.3) +\n\n  # Map bounds\n  coord_sf(xlim = c(-95, -75), ylim = c(20, 40), expand = FALSE) +\n\n  # Storm path\n  geom_path(data = katrina, aes(x = long, y = lat), \n            color = \"gray40\", linewidth = 1, linetype = \"solid\") +\n\n  # Storm points7\n  geom_point(\n    data = katrina,\n    aes(x = long, y = lat, size = wind, color = pressure),\n    alpha = 0.8\n  ) +\n\n  # Scales\n  scale_color_gradient(low = \"#fee08b\", high = \"#d73027\", name = \"Pressure (hPa)\") +\n  scale_size(range = c(2, 15), name = \"Wind (knots)\", breaks = c(35, 65, 100)) +\n\n  # Labels\n  labs(\n    title = \"Hurricane Katrina (2005)\",\n    x = \"Longitude\", y = \"Latitude\"\n  ) +\n\n  # Themes\n  theme(\n    legend.position = \"right\",\n    panel.background = element_rect(fill = \"#e6f2ff\", color = NA)\n  )\n\nplot\n\n\n\n\nTo animate this over time, you need to add transition_time(time). It may take some time for this code to run on your computer. The animation will show up in the viewer pane on the left, instead of below the code.\n\nplot +\n  labs(\n    subtitle = \"Time: {frame_time}\",\n  ) +\n  transition_time(katrina$time) +\n  ease_aes(\"cubic-in-out\")\n\n\nYou need to save this as a .gif file:\n\nanim &lt;- last_plot() %&gt;%\n  animate(width = 700, height = 500, fps = 5, renderer = gifski_renderer())\n\nanim_save(\"katrina.gif\", anim)\n\nYou can include this in your file using ![](katrina.gif) inside plain text."
  }
]